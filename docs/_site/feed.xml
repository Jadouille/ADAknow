<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.0.0">Jekyll</generator><link href="http://localhost:4000/ADAknow/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/ADAknow/" rel="alternate" type="text/html" /><updated>2019-12-20T20:56:21+01:00</updated><id>http://localhost:4000/ADAknow/feed.xml</id><title type="html">ADAknow</title><subtitle>We are where we eat</subtitle><author><name>Alfonso Amayuelas, Beatriz Borges, Jade Cock, Mahmoud Said</name></author><entry><title type="html">Intro</title><link href="http://localhost:4000/ADAknow/intro/" rel="alternate" type="text/html" title="Intro" /><published>2019-12-14T00:00:00+01:00</published><updated>2019-12-14T00:00:00+01:00</updated><id>http://localhost:4000/ADAknow/intro</id><content type="html" xml:base="http://localhost:4000/ADAknow/intro/">&lt;!-- &lt;img src=&quot;/ADAknow/images/chicago.jpg&quot; style=&quot;position: absolute; opacity: 0.2; left: 0; z-index: -1; top: 110px; height: 600px;&quot;/&gt; --&gt;

&lt;h1 id=&quot;we-are-where-we-eat&quot;&gt;We are where we eat&lt;/h1&gt;
&lt;p&gt;We are shaped by what we eat. But we are also shaped by where we eat. Are chefs ready to trade high-quality, fresh ingredients for cheaper stale ones? Are there places and times where food conservation has a subjective meaning? Are large-scale franchises such as McDonald’s and Starbucks under the same level of scrutiny as normal restaurants despite the economic interests at play?&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;We will do a deep dive into Chicago’s food inspection scene and everything happening behind the curtain.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Intro intro intro intro intro intro intro intro intro intro intro intro intro intro intro intro intro intro intro intro intro intro intro intro intro intro intro intro intro intro intro.&lt;/p&gt;</content><author><name>Alfonso Amayuelas, Beatriz Borges, Jade Cock, Mahmoud Said</name></author><summary type="html"></summary></entry><entry><title type="html">Reviews</title><link href="http://localhost:4000/ADAknow/reviews/" rel="alternate" type="text/html" title="Reviews" /><published>2019-12-05T00:00:00+01:00</published><updated>2019-12-05T00:00:00+01:00</updated><id>http://localhost:4000/ADAknow/reviews</id><content type="html" xml:base="http://localhost:4000/ADAknow/reviews/">&lt;p&gt;Can the reviews posted on online services allow us to discover whether a businesses is failing or passing the inspections in Chicago. In this section, we are going to anlyze if there is a relationship between the review rates on Google Local (Google Maps) and their corresponding inspections.&lt;/p&gt;

&lt;p&gt;We have merged the Heath Inspection with Google’s Local dataset, extracted from the  &lt;a href=&quot;http://cseweb.ucsd.edu/~jmcauley/datasets.html&quot;&gt;Recommender Systems Dataset&lt;/a&gt; by Julian McAuley, professor at the University of California, San Diego. After filtering the data, obtaining only the reviews businesses in Chicago and merging them with our dataset, we obtain around 1600 unique businesses for which we have reviews.&lt;/p&gt;

&lt;p&gt;We then try to find relationships between the businesses average review rate and their probability of passing an inspections (calculated from the Health Inspection Dataset), as well as the number of reviews.&lt;/p&gt;

&lt;p&gt;To analyze the possible relationships, we several correlations. All of them yield to irrelevant correlations between the variables studied. The following table shows highest correlation (Spearman) obtained:&lt;/p&gt;

&lt;iframe src=&quot;/ADAknow/images/spearmanCorr.html&quot; style=&quot;width: 100%; height: 350px; frameborder='0'&quot;&gt;&lt;/iframe&gt;

&lt;p&gt;In addition, we also inspect the variables visually. As expected, the variables do not seem to have a significant correlation. The following plot proves this point.&lt;/p&gt;

&lt;iframe src=&quot;/ADAknow/images/dataStory_GoogleReviews.html&quot; style=&quot;width: 100%; height: 500px;&quot;&gt;&lt;/iframe&gt;

&lt;p&gt;Thus, we cannot find the connection between Google Local reviews and the posibility of passing or failing an inspection. Both visual inspection and numeric values have failed to find such connection.&lt;/p&gt;

&lt;p&gt;Then, we can say the number rating of a businesses on Google does not seem to be correlated with the number of failed/passed inpspections. Does this mean that users do not really care about the health conditions of a businesses where they go? Probably they do not have the chance to go behind the scene and therefore they cannot know the true conditions of the businesses.&lt;/p&gt;

&lt;p&gt;In this analysis, we do need to highlight that the number of overlapping businesses between the Google dataset and Health Inspection is small (~1600), whith a heavy-tailed distribution on the number of reviews. Therefore, we deduce that a dataset of reviews with more up-to-date reviews and more businneses in both datasets could yield different resutls.&lt;/p&gt;</content><author><name>Alfonso Amayuelas, Beatriz Borges, Jade Cock, Mahmoud Said</name></author><summary type="html">What is the impact of the business reviews?</summary></entry><entry><title type="html">Time</title><link href="http://localhost:4000/ADAknow/time/" rel="alternate" type="text/html" title="Time" /><published>2019-12-04T00:00:00+01:00</published><updated>2019-12-04T00:00:00+01:00</updated><id>http://localhost:4000/ADAknow/time</id><content type="html" xml:base="http://localhost:4000/ADAknow/time/">&lt;p&gt;People’s lifestyle and needs changes with the year passing, so we investigate what should you be watching out for as a person who wants to buy some food or a facility owner that needs to know what to expect.&lt;/p&gt;

&lt;div class=&quot;column&quot;&gt;
&lt;div class=&quot;wrapperDoughnut&quot; id=&quot;cherry&quot;&gt;&lt;/div&gt;
&lt;/div&gt;

&lt;div class=&quot;column&quot;&gt;
&lt;div class=&quot;wrapperDoughnut&quot; id=&quot;car&quot;&gt;&lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;As we can see here the temperature and the time of the year does not affect the percentage of failed inspections signficantly.&lt;/p&gt;

&lt;p&gt;But then a further look into the data shows us that multiple violations especially those with codes 2 and 3 have a distribution, that is highly skewed with way more occurences for high temperature, this present a potential risk as both those violations are critical violations. Both codes are related to proper food storage, and looking at some examples of the violations, we can find notes that referigator being broken down is repeatedly reported. This is a normal problem where high temperatures causes sometimes the breaking down of referigerators if proper regular maintenance is not done. An example of that is the following plot.&lt;/p&gt;

&lt;div class=&quot;column&quot;&gt;
&lt;div class=&quot;wrapperDoughnut&quot; id=&quot;timeline-chart&quot;&gt;&lt;/div&gt;
&lt;/div&gt;

&lt;!-- JS --&gt;
&lt;script src=&quot;https://code.jquery.com/jquery-3.4.1.min.js&quot; integrity=&quot;sha256-CSXorXvZcTkaix6Yvo6HppcZGetbYMGWSFlBw8HfCJo=&quot; crossorigin=&quot;anonymous&quot;&gt;&lt;/script&gt;

&lt;script src=&quot;https://cdn.jsdelivr.net/npm/apexcharts&quot;&gt;&lt;/script&gt;

&lt;script&gt;
    function generate_plot() {
      var options = {
            chart: {
                height: 350,
                type: 'bar',
            },
            plotOptions: {
                bar: {
                    dataLabels: {
                        position: 'top', // top, center, bottom
                    },
                }
            },
            dataLabels: {
                enabled: true,
                formatter: function (val) {
                    return val + &quot;%&quot;;
                },
                offsetY: -20,
                style: {
                    fontSize: '12px',
                    colors: [&quot;#304758&quot;]
                }
            },
            series: [{
                name: 'Violation percentage',
                data: [19.0, 20.0, 20.0, 20.0, 19.0, 20.0, 20.0, 20.0, 20.0, 19.0, 18.0, 16.0]
            }],
            xaxis: {
                categories: [&quot;Jan&quot;, &quot;Feb&quot;, &quot;Mar&quot;, &quot;Apr&quot;, &quot;May&quot;, &quot;Jun&quot;, &quot;Jul&quot;, &quot;Aug&quot;, &quot;Sep&quot;, &quot;Oct&quot;, &quot;Nov&quot;, &quot;Dec&quot;],
                position: 'top',
                labels: {
                    offsetY: -18,
                },
                axisBorder: {
                    show: false
                },
                axisTicks: {
                    show: false
                },
                crosshairs: {
                    fill: {
                        type: 'gradient',
                        gradient: {
                            colorFrom: '#D8E3F0',
                            colorTo: '#BED1E6',
                            stops: [0, 100],
                            opacityFrom: 0.4,
                            opacityTo: 0.5,
                        }
                    }
                },
                tooltip: {
                    enabled: true,
                    offsetY: -35,
                }
            },
            fill: {
                gradient: {
                    shade: 'light',
                    type: &quot;horizontal&quot;,
                    shadeIntensity: 0.25,
                    gradientToColors: undefined,
                    inverseColors: true,
                    opacityFrom: 1,
                    opacityTo: 1,
                    stops: [50, 0, 100, 100]
                },
            },
            yaxis: {
                axisBorder: {
                    show: false
                },
                axisTicks: {
                    show: false,
                },
                labels: {
                    show: false,
                    formatter: function (val) {
                        return val + &quot;%&quot;;
                    }
                }
            },
            title: {
                text: 'Percentage of failed inspections in every month from 2010-2019',
                floating: true,
                offsetY: 320,
                align: 'center',
                style: {
                    color: '#444'
                }
            },
        };
        var chart = new ApexCharts(
            document.querySelector(&quot;#cherry&quot;),
            options
        );
        chart.render();
    }
        function plot_temp() {
            var options = {
                    chart: {
                        height: 350,
                        type: 'bar',
                    },
                    plotOptions: {
                        bar: {
                            dataLabels: {
                                position: 'top', // top, center, bottom
                            },
                        }
                    },
                    dataLabels: {
                        enabled: true,
                        formatter: function (val) {
                            return val + &quot;°C&quot;;
                        },
                        offsetY: -20,
                        style: {
                            fontSize: '12px',
                            colors: [&quot;#304758&quot;]
                        }
                    },
                    series: [{
                        name: 'Temperature',
                        data: [30.72, 34.43, 46.84, 58.72, 70.94, 80.41, 85.0, 82.92, 75.93, 62.94, 47.61, 36.76]
                    }],
                    xaxis: {
                        categories: [&quot;Jan&quot;, &quot;Feb&quot;, &quot;Mar&quot;, &quot;Apr&quot;, &quot;May&quot;, &quot;Jun&quot;, &quot;Jul&quot;, &quot;Aug&quot;, &quot;Sep&quot;, &quot;Oct&quot;, &quot;Nov&quot;, &quot;Dec&quot;],
                        position: 'top',
                        labels: {
                            offsetY: -18,
                        },
                        axisBorder: {
                            show: false
                        },
                        axisTicks: {
                            show: false
                        },
                        crosshairs: {
                            fill: {
                                type: 'gradient',
                                gradient: {
                                    colorFrom: '#D8E3F0',
                                    colorTo: '#BED1E6',
                                    stops: [0, 100],
                                    opacityFrom: 0.4,
                                    opacityTo: 0.5,
                                }
                            }
                        },
                        tooltip: {
                            enabled: true,
                            offsetY: -35,
                        }
                    },
                    fill: {
                        gradient: {
                            shade: 'light',
                            type: &quot;horizontal&quot;,
                            shadeIntensity: 0.25,
                            gradientToColors: undefined,
                            inverseColors: true,
                            opacityFrom: 1,
                            opacityTo: 1,
                            stops: [50, 0, 100, 100]
                        },
                        colors: ['#730000']
                    },
                    yaxis: {
                        axisBorder: {
                            show: false
                        },
                        axisTicks: {
                            show: false,
                        },
                        labels: {
                            show: false,
                            formatter: function (val) {
                                return val + &quot;°C&quot;;
                            },
                        },
                    },
                    title: {
                        text: 'Average maximum temperature by month from 2010-2019',
                        floating: true,
                        offsetY: 320,
                        align: 'center',
                        style: {
                            color: '#444'
                        }
                    },
                };
                var chart = new ApexCharts(
                    document.querySelector(&quot;#car&quot;),
                    options
                );
                chart.render();
            }
            function plot_hist()
            {
                var options = {
                    chart: {
                        type: &quot;histogram&quot;,
                        height: 380,
                        foreColor: &quot;#999&quot;,
                        events: {
                        dataPointSelection: function(e, chart,opts) {
                            var arraySelected = []
                            opts.selectedDataPoints.map((selectedIndex) =&gt; {
                            selectedIndex.map((s) =&gt; {
                                arraySelected.push(chart.w.globals.series[0][s])
                            })
                            });
                            arraySelected = arraySelected.reduce((acc, curr) =&gt; acc + curr, 0)                                        
                            document.querySelector(&quot;#selected-count&quot;).innerHTML = arraySelected
                        }
                        }
                    },
                    plotOptions: {
                        bar: {
                        dataLabels: {
                            enabled: false
                        }
                        }
                    },
                    series: [{
                        name: &quot;#Occurences&quot;,
                        data: [190, 419, 386, 395, 564, 832, 1207, 68]
                    }],
                    states: {
                        active: {
                        allowMultipleDataPointsSelection: true
                        }
                    },
                    xaxis: {
                        categories: ['20-30°C', '30-40°C', '40-50°C', '50-60°C', '60-70°C', '70-80°C', '80-90°C', '90-100°C'],
                        axisBorder: {
                        show: false
                        },
                        axisTicks: {
                        show: false
                        }
                    },
                    yaxis: {
                        tickAmount: 4,
                        labels: {
                        offsetX: -5,
                        offsetY: -5
                        },
                    },
                    tooltip: {
                        x: {
                        format: &quot;dd MMM yyyy&quot;
                        },
                    },
                    title: {
                        text: 'Histogram of temperature distribution over violations of code 2',
                        floating: true,
                        offsetY: 320,
                        align: 'center',
                        style: {
                            color: '#444'
                        }
                    },
                };
                var chart = new ApexCharts(document.querySelector(&quot;#timeline-chart&quot;), options);
                chart.render();
            }
    generate_plot()
    plot_temp()
    plot_hist()
&lt;/script&gt;</content><author><name>Alfonso Amayuelas, Beatriz Borges, Jade Cock, Mahmoud Said</name></author><summary type="html">What is the impact of the time of the year?</summary></entry><entry><title type="html">Size</title><link href="http://localhost:4000/ADAknow/size/" rel="alternate" type="text/html" title="Size" /><published>2019-12-03T00:00:00+01:00</published><updated>2019-12-03T00:00:00+01:00</updated><id>http://localhost:4000/ADAknow/size</id><content type="html" xml:base="http://localhost:4000/ADAknow/size/">&lt;!-- &lt;h2&gt; What is the impact of &lt;span class=&quot;&quot;&gt;the business size&lt;/span&gt;?&lt;/h2&gt; --&gt;

&lt;p&gt;When deciding which restaurant to go, a good point to make the decision can be whether we know it or not, especilly we we are abroad. And brands play a big role here. How different is eating in such kind of restaurants from eating in independent restaurants? Let’s discover it.&lt;/p&gt;

&lt;p&gt;First of  all, we need to know which are the top chain businesses in our dataset of inspections in Chicago by number of establishments. The following table shows the number of different establishments of the top chains in our dataset of Chicago. If the inspection are sampling businesses uniformly from all over Chicago, this can give us a good picture of Chicago’s chain business scence.&lt;/p&gt;

&lt;iframe src=&quot;/ADAknow/images/tableTopChains.html&quot; style=&quot;width: 100%; height: 500px; frameborder='0'&quot;&gt;&lt;/iframe&gt;

&lt;p&gt;From the table we can derive that Subway is the company with biggest number establishments in Chicago, followed by 7eleven and Starbucks. Which of these chains is your favorite?&lt;/p&gt;

&lt;h3&gt; McDonald's vs Burger King &lt;/h3&gt;

&lt;p&gt;Let’s take on the battlefield of hamburgers. The 2 best-known chains in this industry are: McDonald’s and Burger. Everyone has their preference when coming to them. But what happens when we analyze them from the point of view of their cleanliness conditions? A lot of times it is claimed that these businesses are not the best with regard to keeping their establishments correctly sanitized. Will there be a different between the two?&lt;/p&gt;

&lt;iframe src=&quot;/ADAknow/images/MC_vs_BG.html&quot; style=&quot;width: 100%; height: 500px; frameborder='0'&quot;&gt;&lt;/iframe&gt;

&lt;p&gt;The plot above shows the rate of Pass/Pass with Conditions/Fail inspections for all the restaurants in Chicago that belong to these 2 chains. In the plot we observe the level of cleanliness for McDonald’s and Burger is very similar. There is no siginificant difference between them. They both have the same percentage of failed inspections, while McDonald’s has a 7% more of passed inspections, exactly the increased percentage of “Pass with Conditions” inspections that Burger King has over McDonald’s. In general terms we can say they are vey similar.&lt;/p&gt;

&lt;p&gt;Thus, we can say that in Chicago there is not a big difference between going to McDonald’s and Burger King when considering their level of cleanliness.&lt;/p&gt;

&lt;h3&gt; Top Chains Inspections rates&lt;/h3&gt;

&lt;p&gt;We can do a similar analysis of the cleaning conditions of our previously computed top-10 chains in Chicago which are also familiar to many of us around the world. Here, we will check the percentage of “Passed” and “Failed” inspections for the top 10 chains in Chicago.&lt;/p&gt;

&lt;iframe src=&quot;/ADAknow/images/allTopChains.html&quot; style=&quot;width: 100%; height: 500px; frameborder='0'&quot;&gt;&lt;/iframe&gt;

&lt;p&gt;In the plot above, we show the percentage of failed and passed inspections for the top chains in Chicago. The plot is sorted by number of Failed inspections. We observe that “Citgo” and “Family Dollar”, gas station shops and a variety store chain respectively have the largest amount of of failed inspections. In fact, the number “Fail” + “Pass w/ Conditiions” is alarmingly close to 50% of their inspected stores.&lt;/p&gt;

&lt;h3&gt; Independet businesses vs Chains&lt;/h3&gt;

&lt;p&gt;When we are in a new city, we need to make the decision whether to go into the unexplored wildenesses of eating in a new restaurant that we do not know or visiting a chain restaurant that is familiar to us. One could wonder if there is a big difference of inspections passing rate between the independent businesses and big chains.&lt;/p&gt;

&lt;p&gt;Let’s look at the difference passing inspection rates between independent businesses and chain businesses in Chicago. For this analysis, we need to establish what chain business is. The definition is unclear. Can we consider a businesses a chain when they have 2 estabishments? 3?. We decided to establish these threshold at 5 in order to consider a business a brand. Then we compare the Pass/Fail inspection rates between the group of independent businesses and chains.&lt;/p&gt;

&lt;iframe src=&quot;/ADAknow/images/independent_vs_chain.html&quot; style=&quot;width: 100%; height: 500px; frameborder='0'&quot;&gt;&lt;/iframe&gt;

&lt;p&gt;There is a slight difference in the number of “Failed” inspections, where independent businesses failed 4% more than inspections than chain businesses. However, the there does not seem to be a big difference between the two types. Therefore, we can not conclude that it is safer to go to indepndent businesses than it is to go to chain businesses.&lt;/p&gt;

&lt;p&gt;Hurrah! We do not have to care about the cleaning conditions of independent businesses when we go to Chicago. Independent businesses and big chains have very similar conditions.&lt;/p&gt;</content><author><name>Alfonso Amayuelas, Beatriz Borges, Jade Cock, Mahmoud Said</name></author><summary type="html">What is the impact of the business size?</summary></entry><entry><title type="html">Neighborhood</title><link href="http://localhost:4000/ADAknow/neighborhood/" rel="alternate" type="text/html" title="Neighborhood" /><published>2019-12-02T00:00:00+01:00</published><updated>2019-12-02T00:00:00+01:00</updated><id>http://localhost:4000/ADAknow/neighborhood</id><content type="html" xml:base="http://localhost:4000/ADAknow/neighborhood/">&lt;p&gt;Apart from the type of service provided, other permanent factors affect a business, but maybe none more than its location. In the data, the business have one of 68 distinct possible zip codes. To simplify for a first analysis, we grouped them into 7 zones, based on &lt;a href=&quot;https://www.seechicagorealestate.com/chicago-zip-codes-by-neighborhood.php&quot;&gt;Chigaco's Fultron Grace real estate data&lt;/a&gt;. However, with this splitting method there are no observable differences in the probability of a facility's likelihood to pass or fail an inspection. As such, we will take a deeper look, using a geographical split based on prevalent ethnicities to assess whether this still remains the case.&lt;/p&gt;

&lt;hr style=&quot;opacity: 0.2;&quot; /&gt;

&lt;p&gt;Lorem ipsum dolor sit amet, consectetur adipiscing elit. Fusce bibendum neque eget nunc mattis eu sollicitudin enim tincidunt. Vestibulum lacus tortor, ultricies id dignissim ac, bibendum in velit. Praesent varius interdum vehicula. Aenean risus libero, placerat at vestibulum eget, ultricies eu enim. Praesent nulla tortor, malesuada adipiscing adipiscing sollicitudin, adipiscing eget est.&lt;/p&gt;

&lt;p&gt;Proin convallis mi ac felis pharetra aliquam. Curabitur dignissim accumsan rutrum. In arcu magna, aliquet vel pretium et, molestie et arcu.&lt;/p&gt;

&lt;div class=&quot;dropdown&quot; style=&quot;padding-left: 10%;&quot;&gt;
  &lt;button class=&quot;btn btn-light dropdown-toggle&quot; type=&quot;button&quot; id=&quot;dropdownMenuButton&quot; data-toggle=&quot;dropdown&quot; aria-haspopup=&quot;true&quot; aria-expanded=&quot;false&quot; style=&quot;background: #dedede;&quot;&gt;Change plot type  
  &lt;/button&gt;
  &lt;div class=&quot;dropdown-menu&quot; aria-labelledby=&quot;dropdownMenuButton&quot;&gt;
    &lt;a class=&quot;dropdown-item&quot; href=&quot;#&quot; data-id=&quot;42d07252-f4ac-4b45-aa19-fc69c53fef94&quot;&gt;All&lt;/a&gt;
    &lt;a class=&quot;dropdown-item&quot; href=&quot;#&quot; data-id=&quot;1e38adb2-a7f7-4858-b207-fe98c1292e28&quot;&gt;Black and African American Population&lt;/a&gt;
    &lt;a class=&quot;dropdown-item&quot; href=&quot;#&quot; data-id=&quot;e2253a01-4bfc-40ef-b0da-db6e7e41fad0&quot;&gt;Hispanic or Latino Population&lt;/a&gt;
    &lt;a class=&quot;dropdown-item&quot; href=&quot;#&quot; data-id=&quot;55807f9e-8d15-45ec-9772-a19c0f25eddc&quot;&gt;White Population&lt;/a&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;script type=&quot;text/javascript&quot;&gt;window.PlotlyConfig = {MathJaxConfig: 'local'};&lt;/script&gt;

&lt;script type=&quot;text/javascript&quot; src=&quot;/ADAknow/assets/plotly.js&quot;&gt;&lt;/script&gt;

&lt;div id=&quot;42d07252-f4ac-4b45-aa19-fc69c53fef94&quot; class=&quot;plotly-graph-div&quot; style=&quot;height:500px; width:100%;&quot;&gt;&lt;/div&gt;
&lt;div id=&quot;1e38adb2-a7f7-4858-b207-fe98c1292e28&quot; class=&quot;plotly-graph-div&quot; style=&quot;display: none;&quot;&gt;&lt;/div&gt;
&lt;div id=&quot;e2253a01-4bfc-40ef-b0da-db6e7e41fad0&quot; class=&quot;plotly-graph-div&quot; style=&quot;display: none;&quot;&gt;&lt;/div&gt;
&lt;div id=&quot;55807f9e-8d15-45ec-9772-a19c0f25eddc&quot; class=&quot;plotly-graph-div&quot; style=&quot;display: none;&quot;&gt;&lt;/div&gt;

&lt;p&gt;Mauris lobortis nulla et felis ullamcorper bibendum. Phasellus et hendrerit mauris. Proin eget nibh a massa vestibulum pretium. Suspendisse eu nisl a ante aliquet bibendum quis a nunc. Praesent varius interdum vehicula. Aenean risus libero, placerat at vestibulum eget, ultricies eu enim. Praesent nulla tortor, malesuada adipiscing adipiscing sollicitudin, adipiscing eget est.&lt;/p&gt;

&lt;iframe src=&quot;/ADAknow/map&quot; style=&quot;width: 100%; height: 400px;&quot;&gt;&lt;/iframe&gt;

&lt;!-- JS --&gt;
&lt;script&gt;
    $('div.dropdown div a').click(function(e) {
        e.preventDefault();
        $('div.plotly-graph-div').hide()
        console.log($(e.target))
        map_id = $(e.target).attr(&quot;data-id&quot;)
        $('#'+map_id).show()
    });
&lt;/script&gt;

&lt;script type=&quot;text/javascript&quot;&gt;
    window.PLOTLYENV=window.PLOTLYENV || {};
    if (document.getElementById(&quot;42d07252-f4ac-4b45-aa19-fc69c53fef94&quot;)) {
        Plotly.newPlot(
            '42d07252-f4ac-4b45-aa19-fc69c53fef94',
            [{&quot;hovertext&quot;: [&quot;all food establishments that prepare, sell, or store hot food shall have adequate hot food storage f ...&quot;, &quot;All hot food shall be stored at a temperature of 140\u00b0F or higher, all cold food shall be stored at a ...&quot;, &quot;No person affected with or carrying any disease in a communicable form or afflicted with boils, infe ...&quot;, &quot;In food establishments, there shall be adequate sewage and waste water disposal facilities that comp ...&quot;, &quot;Adequate and convenient toilet facilities shall be provided.\u00a0 They should be properly designed, main ...&quot;, &quot;All food should be properly protected from contamination during storage, preparation, display, servi ...&quot;, &quot;All necessary control measures shall be used to effectively minimize or eliminate the presence of ro ...&quot;, &quot;The area outside of the establishment used for the storage of garbage shall be clean at all times an ...&quot;, &quot;A certified food service manager must be present in all establishments at which potentially hazardou ...&quot;, &quot;All dishwashing machines must be of a type that complies with all requirements of the plumbing secti ...&quot;, &quot;A separate and distinct offense shall be deemed to have been committed for each Minor violation that ...&quot;, &quot;All food not stored in the original container shall be stored in properly labeled containers, the li ...&quot;, &quot;Containers and utensils shall be inverted, covered, or otherwise protected from contamination until  ...&quot;, &quot;All food and non-food contact equipment and utensils shall be smooth, easily cleanable, and durable, ...&quot;, &quot;All utensils shall be thoroughly cleaned and sanitized after each usage, all food and non-food conta ...&quot;, &quot;The floors shall be constructed per code, be smooth and easily cleaned, and be kept clean and in goo ...&quot;, &quot;The walls and ceilings shall be in good repair and easily cleaned, use dustless cleaning methods. ...&quot;, &quot;All rooms in which food or drink is prepared, or in which utensils are washed, shall be lighted so t ...&quot;, &quot;Toilet rooms shall be completely enclosed and shall be vented to the outside air or mechanically ven ...&quot;, &quot;The flow of air discharged from kitchen fans shall always be through a duct to a point above the roo ...&quot;, &quot;All food establishments that display, prepare, or store potentially hazardous foods shall have calib ...&quot;, &quot;All parts of the food establishment and all parts of the property used in connection with the operat ...&quot;, null], &quot;marker&quot;: {&quot;color&quot;: &quot;lightskyblue&quot;, &quot;line&quot;: {&quot;width&quot;: 1.5}}, &quot;name&quot;: &quot;White Alone&quot;, &quot;opacity&quot;: 0.8, &quot;type&quot;: &quot;bar&quot;, &quot;x&quot;: [2, 3, 5, 10, 11, 16, 18, 19, 21, 24, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 55], &quot;y&quot;: [0.021645277662783135, 0.03728783488083269, 0.01518914976245392, 0.015908687681116564, 0.015504563644607408, 0.03178780531078124, 0.08460977388767323, 0.019664084215506535, 0.020225915193092435, 0.01688449937902892, 0.03650915685926627, 0.026504622784710313, 0.016914069430480808, 0.08786247954738108, 0.09092790821456029, 0.10348532339779605, 0.09428903739625841, 0.0443156504425651, 0.017259053364086188, 0.0962800875273523, 0.026277919056912492, 0.052762828473988214, 0.02786484515149723]}, {&quot;hovertext&quot;: [&quot;all food establishments that prepare, sell, or store hot food shall have adequate hot food storage f ...&quot;, &quot;All hot food shall be stored at a temperature of 140\u00b0F or higher, all cold food shall be stored at a ...&quot;, &quot;No person affected with or carrying any disease in a communicable form or afflicted with boils, infe ...&quot;, &quot;In food establishments, there shall be adequate sewage and waste water disposal facilities that comp ...&quot;, &quot;Adequate and convenient toilet facilities shall be provided.\u00a0 They should be properly designed, main ...&quot;, &quot;All food should be properly protected from contamination during storage, preparation, display, servi ...&quot;, &quot;All necessary control measures shall be used to effectively minimize or eliminate the presence of ro ...&quot;, &quot;The area outside of the establishment used for the storage of garbage shall be clean at all times an ...&quot;, &quot;A certified food service manager must be present in all establishments at which potentially hazardou ...&quot;, &quot;All dishwashing machines must be of a type that complies with all requirements of the plumbing secti ...&quot;, &quot;A separate and distinct offense shall be deemed to have been committed for each Minor violation that ...&quot;, &quot;All food not stored in the original container shall be stored in properly labeled containers, the li ...&quot;, &quot;Containers and utensils shall be inverted, covered, or otherwise protected from contamination until  ...&quot;, &quot;All food and non-food contact equipment and utensils shall be smooth, easily cleanable, and durable, ...&quot;, &quot;All utensils shall be thoroughly cleaned and sanitized after each usage, all food and non-food conta ...&quot;, &quot;The floors shall be constructed per code, be smooth and easily cleaned, and be kept clean and in goo ...&quot;, &quot;The walls and ceilings shall be in good repair and easily cleaned, use dustless cleaning methods. ...&quot;, &quot;All rooms in which food or drink is prepared, or in which utensils are washed, shall be lighted so t ...&quot;, &quot;Toilet rooms shall be completely enclosed and shall be vented to the outside air or mechanically ven ...&quot;, &quot;The flow of air discharged from kitchen fans shall always be through a duct to a point above the roo ...&quot;, &quot;All food establishments that display, prepare, or store potentially hazardous foods shall have calib ...&quot;, &quot;All parts of the food establishment and all parts of the property used in connection with the operat ...&quot;, null], &quot;marker&quot;: {&quot;color&quot;: &quot;dodgerblue&quot;, &quot;line&quot;: {&quot;width&quot;: 1.5}}, &quot;name&quot;: &quot;Black or African American Alone&quot;, &quot;opacity&quot;: 0.8, &quot;type&quot;: &quot;bar&quot;, &quot;x&quot;: [2, 3, 5, 10, 11, 16, 18, 19, 21, 24, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 55], &quot;y&quot;: [0.023245223655068203, 0.027778352756101094, 0.01333029744778622, 0.01564861004740121, 0.01581420380451657, 0.010370309039349216, 0.09848688704435843, 0.023576411169298917, 0.02912380203266337, 0.01422036389228126, 0.020802715737616693, 0.015006934238579206, 0.009914926207281986, 0.07039804599366604, 0.0949680197056571, 0.11183788371178406, 0.11020264536026991, 0.050174908405953095, 0.020637121980501334, 0.10072240276541575, 0.02446647761379396, 0.0763801204694583, 0.022872637701558653]}, {&quot;hovertext&quot;: [&quot;all food establishments that prepare, sell, or store hot food shall have adequate hot food storage f ...&quot;, &quot;All hot food shall be stored at a temperature of 140\u00b0F or higher, all cold food shall be stored at a ...&quot;, &quot;No person affected with or carrying any disease in a communicable form or afflicted with boils, infe ...&quot;, &quot;In food establishments, there shall be adequate sewage and waste water disposal facilities that comp ...&quot;, &quot;Adequate and convenient toilet facilities shall be provided.\u00a0 They should be properly designed, main ...&quot;, &quot;All food should be properly protected from contamination during storage, preparation, display, servi ...&quot;, &quot;All necessary control measures shall be used to effectively minimize or eliminate the presence of ro ...&quot;, &quot;The area outside of the establishment used for the storage of garbage shall be clean at all times an ...&quot;, &quot;A certified food service manager must be present in all establishments at which potentially hazardou ...&quot;, &quot;All dishwashing machines must be of a type that complies with all requirements of the plumbing secti ...&quot;, &quot;A separate and distinct offense shall be deemed to have been committed for each Minor violation that ...&quot;, &quot;All food not stored in the original container shall be stored in properly labeled containers, the li ...&quot;, &quot;Containers and utensils shall be inverted, covered, or otherwise protected from contamination until  ...&quot;, &quot;All food and non-food contact equipment and utensils shall be smooth, easily cleanable, and durable, ...&quot;, &quot;All utensils shall be thoroughly cleaned and sanitized after each usage, all food and non-food conta ...&quot;, &quot;The floors shall be constructed per code, be smooth and easily cleaned, and be kept clean and in goo ...&quot;, &quot;The walls and ceilings shall be in good repair and easily cleaned, use dustless cleaning methods. ...&quot;, &quot;All rooms in which food or drink is prepared, or in which utensils are washed, shall be lighted so t ...&quot;, &quot;Toilet rooms shall be completely enclosed and shall be vented to the outside air or mechanically ven ...&quot;, &quot;The flow of air discharged from kitchen fans shall always be through a duct to a point above the roo ...&quot;, &quot;All food establishments that display, prepare, or store potentially hazardous foods shall have calib ...&quot;, &quot;All parts of the food establishment and all parts of the property used in connection with the operat ...&quot;, null], &quot;marker&quot;: {&quot;color&quot;: &quot;lightgreen&quot;, &quot;line&quot;: {&quot;width&quot;: 1.5}}, &quot;name&quot;: &quot;Hispanic or Latino&quot;, &quot;opacity&quot;: 0.8, &quot;type&quot;: &quot;bar&quot;, &quot;x&quot;: [2, 3, 5, 10, 11, 16, 18, 19, 21, 24, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 55], &quot;y&quot;: [0.024206279600070164, 0.03224580482956207, 0.016692977840145003, 0.017306905221306203, 0.015435888440624452, 0.02023036894112144, 0.08975033619832778, 0.02207215108460504, 0.02081506168508449, 0.01736537449570251, 0.026428112027129743, 0.02327077120972929, 0.015406653803426299, 0.07981055955095598, 0.0894872244635444, 0.1010349061568146, 0.09890077764134947, 0.0511898497339648, 0.02020113430392329, 0.09887154300415132, 0.02996550312810618, 0.061071157106940305, 0.028211424896217037]}],
            {&quot;height&quot;: 500, &quot;legend&quot;: {&quot;orientation&quot;: &quot;h&quot;}, &quot;template&quot;: {&quot;data&quot;: {&quot;bar&quot;: [{&quot;error_x&quot;: {&quot;color&quot;: &quot;#2a3f5f&quot;}, &quot;error_y&quot;: {&quot;color&quot;: &quot;#2a3f5f&quot;}, &quot;marker&quot;: {&quot;line&quot;: {&quot;color&quot;: &quot;#E5ECF6&quot;, &quot;width&quot;: 0.5}}, &quot;type&quot;: &quot;bar&quot;}], &quot;barpolar&quot;: [{&quot;marker&quot;: {&quot;line&quot;: {&quot;color&quot;: &quot;#E5ECF6&quot;, &quot;width&quot;: 0.5}}, &quot;type&quot;: &quot;barpolar&quot;}], &quot;carpet&quot;: [{&quot;aaxis&quot;: {&quot;endlinecolor&quot;: &quot;#2a3f5f&quot;, &quot;gridcolor&quot;: &quot;white&quot;, &quot;linecolor&quot;: &quot;white&quot;, &quot;minorgridcolor&quot;: &quot;white&quot;, &quot;startlinecolor&quot;: &quot;#2a3f5f&quot;}, &quot;baxis&quot;: {&quot;endlinecolor&quot;: &quot;#2a3f5f&quot;, &quot;gridcolor&quot;: &quot;white&quot;, &quot;linecolor&quot;: &quot;white&quot;, &quot;minorgridcolor&quot;: &quot;white&quot;, &quot;startlinecolor&quot;: &quot;#2a3f5f&quot;}, &quot;type&quot;: &quot;carpet&quot;}], &quot;choropleth&quot;: [{&quot;colorbar&quot;: {&quot;outlinewidth&quot;: 0, &quot;ticks&quot;: &quot;&quot;}, &quot;type&quot;: &quot;choropleth&quot;}], &quot;contour&quot;: [{&quot;colorbar&quot;: {&quot;outlinewidth&quot;: 0, &quot;ticks&quot;: &quot;&quot;}, &quot;colorscale&quot;: [[0.0, &quot;#0d0887&quot;], [0.1111111111111111, &quot;#46039f&quot;], [0.2222222222222222, &quot;#7201a8&quot;], [0.3333333333333333, &quot;#9c179e&quot;], [0.4444444444444444, &quot;#bd3786&quot;], [0.5555555555555556, &quot;#d8576b&quot;], [0.6666666666666666, &quot;#ed7953&quot;], [0.7777777777777778, &quot;#fb9f3a&quot;], [0.8888888888888888, &quot;#fdca26&quot;], [1.0, &quot;#f0f921&quot;]], &quot;type&quot;: &quot;contour&quot;}], &quot;contourcarpet&quot;: [{&quot;colorbar&quot;: {&quot;outlinewidth&quot;: 0, &quot;ticks&quot;: &quot;&quot;}, &quot;type&quot;: &quot;contourcarpet&quot;}], &quot;heatmap&quot;: [{&quot;colorbar&quot;: {&quot;outlinewidth&quot;: 0, &quot;ticks&quot;: &quot;&quot;}, &quot;colorscale&quot;: [[0.0, &quot;#0d0887&quot;], [0.1111111111111111, &quot;#46039f&quot;], [0.2222222222222222, &quot;#7201a8&quot;], [0.3333333333333333, &quot;#9c179e&quot;], [0.4444444444444444, &quot;#bd3786&quot;], [0.5555555555555556, &quot;#d8576b&quot;], [0.6666666666666666, &quot;#ed7953&quot;], [0.7777777777777778, &quot;#fb9f3a&quot;], [0.8888888888888888, &quot;#fdca26&quot;], [1.0, &quot;#f0f921&quot;]], &quot;type&quot;: &quot;heatmap&quot;}], &quot;heatmapgl&quot;: [{&quot;colorbar&quot;: {&quot;outlinewidth&quot;: 0, &quot;ticks&quot;: &quot;&quot;}, &quot;colorscale&quot;: [[0.0, &quot;#0d0887&quot;], [0.1111111111111111, &quot;#46039f&quot;], [0.2222222222222222, &quot;#7201a8&quot;], [0.3333333333333333, &quot;#9c179e&quot;], [0.4444444444444444, &quot;#bd3786&quot;], [0.5555555555555556, &quot;#d8576b&quot;], [0.6666666666666666, &quot;#ed7953&quot;], [0.7777777777777778, &quot;#fb9f3a&quot;], [0.8888888888888888, &quot;#fdca26&quot;], [1.0, &quot;#f0f921&quot;]], &quot;type&quot;: &quot;heatmapgl&quot;}], &quot;histogram&quot;: [{&quot;marker&quot;: {&quot;colorbar&quot;: {&quot;outlinewidth&quot;: 0, &quot;ticks&quot;: &quot;&quot;}}, &quot;type&quot;: &quot;histogram&quot;}], &quot;histogram2d&quot;: [{&quot;colorbar&quot;: {&quot;outlinewidth&quot;: 0, &quot;ticks&quot;: &quot;&quot;}, &quot;colorscale&quot;: [[0.0, &quot;#0d0887&quot;], [0.1111111111111111, &quot;#46039f&quot;], [0.2222222222222222, &quot;#7201a8&quot;], [0.3333333333333333, &quot;#9c179e&quot;], [0.4444444444444444, &quot;#bd3786&quot;], [0.5555555555555556, &quot;#d8576b&quot;], [0.6666666666666666, &quot;#ed7953&quot;], [0.7777777777777778, &quot;#fb9f3a&quot;], [0.8888888888888888, &quot;#fdca26&quot;], [1.0, &quot;#f0f921&quot;]], &quot;type&quot;: &quot;histogram2d&quot;}], &quot;histogram2dcontour&quot;: [{&quot;colorbar&quot;: {&quot;outlinewidth&quot;: 0, &quot;ticks&quot;: &quot;&quot;}, &quot;colorscale&quot;: [[0.0, &quot;#0d0887&quot;], [0.1111111111111111, &quot;#46039f&quot;], [0.2222222222222222, &quot;#7201a8&quot;], [0.3333333333333333, &quot;#9c179e&quot;], [0.4444444444444444, &quot;#bd3786&quot;], [0.5555555555555556, &quot;#d8576b&quot;], [0.6666666666666666, &quot;#ed7953&quot;], [0.7777777777777778, &quot;#fb9f3a&quot;], [0.8888888888888888, &quot;#fdca26&quot;], [1.0, &quot;#f0f921&quot;]], &quot;type&quot;: &quot;histogram2dcontour&quot;}], &quot;mesh3d&quot;: [{&quot;colorbar&quot;: {&quot;outlinewidth&quot;: 0, &quot;ticks&quot;: &quot;&quot;}, &quot;type&quot;: &quot;mesh3d&quot;}], &quot;parcoords&quot;: [{&quot;line&quot;: {&quot;colorbar&quot;: {&quot;outlinewidth&quot;: 0, &quot;ticks&quot;: &quot;&quot;}}, &quot;type&quot;: &quot;parcoords&quot;}], &quot;pie&quot;: [{&quot;automargin&quot;: true, &quot;type&quot;: &quot;pie&quot;}], &quot;scatter&quot;: [{&quot;marker&quot;: {&quot;colorbar&quot;: {&quot;outlinewidth&quot;: 0, &quot;ticks&quot;: &quot;&quot;}}, &quot;type&quot;: &quot;scatter&quot;}], &quot;scatter3d&quot;: [{&quot;line&quot;: {&quot;colorbar&quot;: {&quot;outlinewidth&quot;: 0, &quot;ticks&quot;: &quot;&quot;}}, &quot;marker&quot;: {&quot;colorbar&quot;: {&quot;outlinewidth&quot;: 0, &quot;ticks&quot;: &quot;&quot;}}, &quot;type&quot;: &quot;scatter3d&quot;}], &quot;scattercarpet&quot;: [{&quot;marker&quot;: {&quot;colorbar&quot;: {&quot;outlinewidth&quot;: 0, &quot;ticks&quot;: &quot;&quot;}}, &quot;type&quot;: &quot;scattercarpet&quot;}], &quot;scattergeo&quot;: [{&quot;marker&quot;: {&quot;colorbar&quot;: {&quot;outlinewidth&quot;: 0, &quot;ticks&quot;: &quot;&quot;}}, &quot;type&quot;: &quot;scattergeo&quot;}], &quot;scattergl&quot;: [{&quot;marker&quot;: {&quot;colorbar&quot;: {&quot;outlinewidth&quot;: 0, &quot;ticks&quot;: &quot;&quot;}}, &quot;type&quot;: &quot;scattergl&quot;}], &quot;scattermapbox&quot;: [{&quot;marker&quot;: {&quot;colorbar&quot;: {&quot;outlinewidth&quot;: 0, &quot;ticks&quot;: &quot;&quot;}}, &quot;type&quot;: &quot;scattermapbox&quot;}], &quot;scatterpolar&quot;: [{&quot;marker&quot;: {&quot;colorbar&quot;: {&quot;outlinewidth&quot;: 0, &quot;ticks&quot;: &quot;&quot;}}, &quot;type&quot;: &quot;scatterpolar&quot;}], &quot;scatterpolargl&quot;: [{&quot;marker&quot;: {&quot;colorbar&quot;: {&quot;outlinewidth&quot;: 0, &quot;ticks&quot;: &quot;&quot;}}, &quot;type&quot;: &quot;scatterpolargl&quot;}], &quot;scatterternary&quot;: [{&quot;marker&quot;: {&quot;colorbar&quot;: {&quot;outlinewidth&quot;: 0, &quot;ticks&quot;: &quot;&quot;}}, &quot;type&quot;: &quot;scatterternary&quot;}], &quot;surface&quot;: [{&quot;colorbar&quot;: {&quot;outlinewidth&quot;: 0, &quot;ticks&quot;: &quot;&quot;}, &quot;colorscale&quot;: [[0.0, &quot;#0d0887&quot;], [0.1111111111111111, &quot;#46039f&quot;], [0.2222222222222222, &quot;#7201a8&quot;], [0.3333333333333333, &quot;#9c179e&quot;], [0.4444444444444444, &quot;#bd3786&quot;], [0.5555555555555556, &quot;#d8576b&quot;], [0.6666666666666666, &quot;#ed7953&quot;], [0.7777777777777778, &quot;#fb9f3a&quot;], [0.8888888888888888, &quot;#fdca26&quot;], [1.0, &quot;#f0f921&quot;]], &quot;type&quot;: &quot;surface&quot;}], &quot;table&quot;: [{&quot;cells&quot;: {&quot;fill&quot;: {&quot;color&quot;: &quot;#EBF0F8&quot;}, &quot;line&quot;: {&quot;color&quot;: &quot;white&quot;}}, &quot;header&quot;: {&quot;fill&quot;: {&quot;color&quot;: &quot;#C8D4E3&quot;}, &quot;line&quot;: {&quot;color&quot;: &quot;white&quot;}}, &quot;type&quot;: &quot;table&quot;}]}, &quot;layout&quot;: {&quot;annotationdefaults&quot;: {&quot;arrowcolor&quot;: &quot;#2a3f5f&quot;, &quot;arrowhead&quot;: 0, &quot;arrowwidth&quot;: 1}, &quot;coloraxis&quot;: {&quot;colorbar&quot;: {&quot;outlinewidth&quot;: 0, &quot;ticks&quot;: &quot;&quot;}}, &quot;colorscale&quot;: {&quot;diverging&quot;: [[0, &quot;#8e0152&quot;], [0.1, &quot;#c51b7d&quot;], [0.2, &quot;#de77ae&quot;], [0.3, &quot;#f1b6da&quot;], [0.4, &quot;#fde0ef&quot;], [0.5, &quot;#f7f7f7&quot;], [0.6, &quot;#e6f5d0&quot;], [0.7, &quot;#b8e186&quot;], [0.8, &quot;#7fbc41&quot;], [0.9, &quot;#4d9221&quot;], [1, &quot;#276419&quot;]], &quot;sequential&quot;: [[0.0, &quot;#0d0887&quot;], [0.1111111111111111, &quot;#46039f&quot;], [0.2222222222222222, &quot;#7201a8&quot;], [0.3333333333333333, &quot;#9c179e&quot;], [0.4444444444444444, &quot;#bd3786&quot;], [0.5555555555555556, &quot;#d8576b&quot;], [0.6666666666666666, &quot;#ed7953&quot;], [0.7777777777777778, &quot;#fb9f3a&quot;], [0.8888888888888888, &quot;#fdca26&quot;], [1.0, &quot;#f0f921&quot;]], &quot;sequentialminus&quot;: [[0.0, &quot;#0d0887&quot;], [0.1111111111111111, &quot;#46039f&quot;], [0.2222222222222222, &quot;#7201a8&quot;], [0.3333333333333333, &quot;#9c179e&quot;], [0.4444444444444444, &quot;#bd3786&quot;], [0.5555555555555556, &quot;#d8576b&quot;], [0.6666666666666666, &quot;#ed7953&quot;], [0.7777777777777778, &quot;#fb9f3a&quot;], [0.8888888888888888, &quot;#fdca26&quot;], [1.0, &quot;#f0f921&quot;]]}, &quot;colorway&quot;: [&quot;#636efa&quot;, &quot;#EF553B&quot;, &quot;#00cc96&quot;, &quot;#ab63fa&quot;, &quot;#FFA15A&quot;, &quot;#19d3f3&quot;, &quot;#FF6692&quot;, &quot;#B6E880&quot;, &quot;#FF97FF&quot;, &quot;#FECB52&quot;], &quot;font&quot;: {&quot;color&quot;: &quot;#2a3f5f&quot;}, &quot;geo&quot;: {&quot;bgcolor&quot;: &quot;white&quot;, &quot;lakecolor&quot;: &quot;white&quot;, &quot;landcolor&quot;: &quot;#E5ECF6&quot;, &quot;showlakes&quot;: true, &quot;showland&quot;: true, &quot;subunitcolor&quot;: &quot;white&quot;}, &quot;hoverlabel&quot;: {&quot;align&quot;: &quot;left&quot;}, &quot;hovermode&quot;: &quot;closest&quot;, &quot;mapbox&quot;: {&quot;style&quot;: &quot;light&quot;}, &quot;paper_bgcolor&quot;: &quot;white&quot;, &quot;plot_bgcolor&quot;: &quot;#E5ECF6&quot;, &quot;polar&quot;: {&quot;angularaxis&quot;: {&quot;gridcolor&quot;: &quot;white&quot;, &quot;linecolor&quot;: &quot;white&quot;, &quot;ticks&quot;: &quot;&quot;}, &quot;bgcolor&quot;: &quot;#E5ECF6&quot;, &quot;radialaxis&quot;: {&quot;gridcolor&quot;: &quot;white&quot;, &quot;linecolor&quot;: &quot;white&quot;, &quot;ticks&quot;: &quot;&quot;}}, &quot;scene&quot;: {&quot;xaxis&quot;: {&quot;backgroundcolor&quot;: &quot;#E5ECF6&quot;, &quot;gridcolor&quot;: &quot;white&quot;, &quot;gridwidth&quot;: 2, &quot;linecolor&quot;: &quot;white&quot;, &quot;showbackground&quot;: true, &quot;ticks&quot;: &quot;&quot;, &quot;zerolinecolor&quot;: &quot;white&quot;}, &quot;yaxis&quot;: {&quot;backgroundcolor&quot;: &quot;#E5ECF6&quot;, &quot;gridcolor&quot;: &quot;white&quot;, &quot;gridwidth&quot;: 2, &quot;linecolor&quot;: &quot;white&quot;, &quot;showbackground&quot;: true, &quot;ticks&quot;: &quot;&quot;, &quot;zerolinecolor&quot;: &quot;white&quot;}, &quot;zaxis&quot;: {&quot;backgroundcolor&quot;: &quot;#E5ECF6&quot;, &quot;gridcolor&quot;: &quot;white&quot;, &quot;gridwidth&quot;: 2, &quot;linecolor&quot;: &quot;white&quot;, &quot;showbackground&quot;: true, &quot;ticks&quot;: &quot;&quot;, &quot;zerolinecolor&quot;: &quot;white&quot;}}, &quot;shapedefaults&quot;: {&quot;line&quot;: {&quot;color&quot;: &quot;#2a3f5f&quot;}}, &quot;ternary&quot;: {&quot;aaxis&quot;: {&quot;gridcolor&quot;: &quot;white&quot;, &quot;linecolor&quot;: &quot;white&quot;, &quot;ticks&quot;: &quot;&quot;}, &quot;baxis&quot;: {&quot;gridcolor&quot;: &quot;white&quot;, &quot;linecolor&quot;: &quot;white&quot;, &quot;ticks&quot;: &quot;&quot;}, &quot;bgcolor&quot;: &quot;#E5ECF6&quot;, &quot;caxis&quot;: {&quot;gridcolor&quot;: &quot;white&quot;, &quot;linecolor&quot;: &quot;white&quot;, &quot;ticks&quot;: &quot;&quot;}}, &quot;title&quot;: {&quot;x&quot;: 0.05}, &quot;xaxis&quot;: {&quot;automargin&quot;: true, &quot;gridcolor&quot;: &quot;white&quot;, &quot;linecolor&quot;: &quot;white&quot;, &quot;ticks&quot;: &quot;&quot;, &quot;title&quot;: {&quot;standoff&quot;: 15}, &quot;zerolinecolor&quot;: &quot;white&quot;, &quot;zerolinewidth&quot;: 2}, &quot;yaxis&quot;: {&quot;automargin&quot;: true, &quot;gridcolor&quot;: &quot;white&quot;, &quot;linecolor&quot;: &quot;white&quot;, &quot;ticks&quot;: &quot;&quot;, &quot;title&quot;: {&quot;standoff&quot;: 15}, &quot;zerolinecolor&quot;: &quot;white&quot;, &quot;zerolinewidth&quot;: 2}}}, &quot;title&quot;: {&quot;text&quot;: &quot;Distribution of Violations for Each of the Ethnicities&quot;, &quot;x&quot;: 0.5, &quot;xanchor&quot;: &quot;center&quot;, &quot;y&quot;: 0.9, &quot;yanchor&quot;: &quot;top&quot;}},
            {&quot;responsive&quot;: true}
        )
    };
    if (document.getElementById(&quot;1e38adb2-a7f7-4858-b207-fe98c1292e28&quot;)) {
        Plotly.newPlot(
            '1e38adb2-a7f7-4858-b207-fe98c1292e28',
            [{&quot;hovertext&quot;: [&quot;all food establishments that prepare, sell, or store hot food shall have adequate hot food storage f ...&quot;, &quot;All hot food shall be stored at a temperature of 140\u00b0F or higher, all cold food shall be stored at a ...&quot;, &quot;No person affected with or carrying any disease in a communicable form or afflicted with boils, infe ...&quot;, &quot;In food establishments, there shall be adequate sewage and waste water disposal facilities that comp ...&quot;, &quot;Adequate and convenient toilet facilities shall be provided.\u00a0 They should be properly designed, main ...&quot;, &quot;All food should be properly protected from contamination during storage, preparation, display, servi ...&quot;, &quot;All necessary control measures shall be used to effectively minimize or eliminate the presence of ro ...&quot;, &quot;The area outside of the establishment used for the storage of garbage shall be clean at all times an ...&quot;, &quot;A certified food service manager must be present in all establishments at which potentially hazardou ...&quot;, &quot;All dishwashing machines must be of a type that complies with all requirements of the plumbing secti ...&quot;, &quot;A separate and distinct offense shall be deemed to have been committed for each Minor violation that ...&quot;, &quot;All food not stored in the original container shall be stored in properly labeled containers, the li ...&quot;, &quot;Containers and utensils shall be inverted, covered, or otherwise protected from contamination until  ...&quot;, &quot;All food and non-food contact equipment and utensils shall be smooth, easily cleanable, and durable, ...&quot;, &quot;All utensils shall be thoroughly cleaned and sanitized after each usage, all food and non-food conta ...&quot;, &quot;The floors shall be constructed per code, be smooth and easily cleaned, and be kept clean and in goo ...&quot;, &quot;The walls and ceilings shall be in good repair and easily cleaned, use dustless cleaning methods. ...&quot;, &quot;All rooms in which food or drink is prepared, or in which utensils are washed, shall be lighted so t ...&quot;, &quot;Toilet rooms shall be completely enclosed and shall be vented to the outside air or mechanically ven ...&quot;, &quot;The flow of air discharged from kitchen fans shall always be through a duct to a point above the roo ...&quot;, &quot;All food establishments that display, prepare, or store potentially hazardous foods shall have calib ...&quot;, &quot;All parts of the food establishment and all parts of the property used in connection with the operat ...&quot;, null], &quot;marker&quot;: {&quot;color&quot;: &quot;dodgerblue&quot;, &quot;line&quot;: {&quot;width&quot;: 1.5}}, &quot;name&quot;: &quot;Black or African American Alone&quot;, &quot;opacity&quot;: 0.8, &quot;type&quot;: &quot;bar&quot;, &quot;x&quot;: [2, 3, 5, 10, 11, 16, 18, 19, 21, 24, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 55], &quot;y&quot;: [0.023245223655068203, 0.027778352756101094, 0.01333029744778622, 0.01564861004740121, 0.01581420380451657, 0.010370309039349216, 0.09848688704435843, 0.023576411169298917, 0.02912380203266337, 0.01422036389228126, 0.020802715737616693, 0.015006934238579206, 0.009914926207281986, 0.07039804599366604, 0.0949680197056571, 0.11183788371178406, 0.11020264536026991, 0.050174908405953095, 0.020637121980501334, 0.10072240276541575, 0.02446647761379396, 0.0763801204694583, 0.022872637701558653]}],
            {&quot;height&quot;: 500, &quot;template&quot;: {&quot;data&quot;: {&quot;bar&quot;: [{&quot;error_x&quot;: {&quot;color&quot;: &quot;#2a3f5f&quot;}, &quot;error_y&quot;: {&quot;color&quot;: &quot;#2a3f5f&quot;}, &quot;marker&quot;: {&quot;line&quot;: {&quot;color&quot;: &quot;#E5ECF6&quot;, &quot;width&quot;: 0.5}}, &quot;type&quot;: &quot;bar&quot;}], &quot;barpolar&quot;: [{&quot;marker&quot;: {&quot;line&quot;: {&quot;color&quot;: &quot;#E5ECF6&quot;, &quot;width&quot;: 0.5}}, &quot;type&quot;: &quot;barpolar&quot;}], &quot;carpet&quot;: [{&quot;aaxis&quot;: {&quot;endlinecolor&quot;: &quot;#2a3f5f&quot;, &quot;gridcolor&quot;: &quot;white&quot;, &quot;linecolor&quot;: &quot;white&quot;, &quot;minorgridcolor&quot;: &quot;white&quot;, &quot;startlinecolor&quot;: &quot;#2a3f5f&quot;}, &quot;baxis&quot;: {&quot;endlinecolor&quot;: &quot;#2a3f5f&quot;, &quot;gridcolor&quot;: &quot;white&quot;, &quot;linecolor&quot;: &quot;white&quot;, &quot;minorgridcolor&quot;: &quot;white&quot;, &quot;startlinecolor&quot;: &quot;#2a3f5f&quot;}, &quot;type&quot;: &quot;carpet&quot;}], &quot;choropleth&quot;: [{&quot;colorbar&quot;: {&quot;outlinewidth&quot;: 0, &quot;ticks&quot;: &quot;&quot;}, &quot;type&quot;: &quot;choropleth&quot;}], &quot;contour&quot;: [{&quot;colorbar&quot;: {&quot;outlinewidth&quot;: 0, &quot;ticks&quot;: &quot;&quot;}, &quot;colorscale&quot;: [[0.0, &quot;#0d0887&quot;], [0.1111111111111111, &quot;#46039f&quot;], [0.2222222222222222, &quot;#7201a8&quot;], [0.3333333333333333, &quot;#9c179e&quot;], [0.4444444444444444, &quot;#bd3786&quot;], [0.5555555555555556, &quot;#d8576b&quot;], [0.6666666666666666, &quot;#ed7953&quot;], [0.7777777777777778, &quot;#fb9f3a&quot;], [0.8888888888888888, &quot;#fdca26&quot;], [1.0, &quot;#f0f921&quot;]], &quot;type&quot;: &quot;contour&quot;}], &quot;contourcarpet&quot;: [{&quot;colorbar&quot;: {&quot;outlinewidth&quot;: 0, &quot;ticks&quot;: &quot;&quot;}, &quot;type&quot;: &quot;contourcarpet&quot;}], &quot;heatmap&quot;: [{&quot;colorbar&quot;: {&quot;outlinewidth&quot;: 0, &quot;ticks&quot;: &quot;&quot;}, &quot;colorscale&quot;: [[0.0, &quot;#0d0887&quot;], [0.1111111111111111, &quot;#46039f&quot;], [0.2222222222222222, &quot;#7201a8&quot;], [0.3333333333333333, &quot;#9c179e&quot;], [0.4444444444444444, &quot;#bd3786&quot;], [0.5555555555555556, &quot;#d8576b&quot;], [0.6666666666666666, &quot;#ed7953&quot;], [0.7777777777777778, &quot;#fb9f3a&quot;], [0.8888888888888888, &quot;#fdca26&quot;], [1.0, &quot;#f0f921&quot;]], &quot;type&quot;: &quot;heatmap&quot;}], &quot;heatmapgl&quot;: [{&quot;colorbar&quot;: {&quot;outlinewidth&quot;: 0, &quot;ticks&quot;: &quot;&quot;}, &quot;colorscale&quot;: [[0.0, &quot;#0d0887&quot;], [0.1111111111111111, &quot;#46039f&quot;], [0.2222222222222222, &quot;#7201a8&quot;], [0.3333333333333333, &quot;#9c179e&quot;], [0.4444444444444444, &quot;#bd3786&quot;], [0.5555555555555556, &quot;#d8576b&quot;], [0.6666666666666666, &quot;#ed7953&quot;], [0.7777777777777778, &quot;#fb9f3a&quot;], [0.8888888888888888, &quot;#fdca26&quot;], [1.0, &quot;#f0f921&quot;]], &quot;type&quot;: &quot;heatmapgl&quot;}], &quot;histogram&quot;: [{&quot;marker&quot;: {&quot;colorbar&quot;: {&quot;outlinewidth&quot;: 0, &quot;ticks&quot;: &quot;&quot;}}, &quot;type&quot;: &quot;histogram&quot;}], &quot;histogram2d&quot;: [{&quot;colorbar&quot;: {&quot;outlinewidth&quot;: 0, &quot;ticks&quot;: &quot;&quot;}, &quot;colorscale&quot;: [[0.0, &quot;#0d0887&quot;], [0.1111111111111111, &quot;#46039f&quot;], [0.2222222222222222, &quot;#7201a8&quot;], [0.3333333333333333, &quot;#9c179e&quot;], [0.4444444444444444, &quot;#bd3786&quot;], [0.5555555555555556, &quot;#d8576b&quot;], [0.6666666666666666, &quot;#ed7953&quot;], [0.7777777777777778, &quot;#fb9f3a&quot;], [0.8888888888888888, &quot;#fdca26&quot;], [1.0, &quot;#f0f921&quot;]], &quot;type&quot;: &quot;histogram2d&quot;}], &quot;histogram2dcontour&quot;: [{&quot;colorbar&quot;: {&quot;outlinewidth&quot;: 0, &quot;ticks&quot;: &quot;&quot;}, &quot;colorscale&quot;: [[0.0, &quot;#0d0887&quot;], [0.1111111111111111, &quot;#46039f&quot;], [0.2222222222222222, &quot;#7201a8&quot;], [0.3333333333333333, &quot;#9c179e&quot;], [0.4444444444444444, &quot;#bd3786&quot;], [0.5555555555555556, &quot;#d8576b&quot;], [0.6666666666666666, &quot;#ed7953&quot;], [0.7777777777777778, &quot;#fb9f3a&quot;], [0.8888888888888888, &quot;#fdca26&quot;], [1.0, &quot;#f0f921&quot;]], &quot;type&quot;: &quot;histogram2dcontour&quot;}], &quot;mesh3d&quot;: [{&quot;colorbar&quot;: {&quot;outlinewidth&quot;: 0, &quot;ticks&quot;: &quot;&quot;}, &quot;type&quot;: &quot;mesh3d&quot;}], &quot;parcoords&quot;: [{&quot;line&quot;: {&quot;colorbar&quot;: {&quot;outlinewidth&quot;: 0, &quot;ticks&quot;: &quot;&quot;}}, &quot;type&quot;: &quot;parcoords&quot;}], &quot;pie&quot;: [{&quot;automargin&quot;: true, &quot;type&quot;: &quot;pie&quot;}], &quot;scatter&quot;: [{&quot;marker&quot;: {&quot;colorbar&quot;: {&quot;outlinewidth&quot;: 0, &quot;ticks&quot;: &quot;&quot;}}, &quot;type&quot;: &quot;scatter&quot;}], &quot;scatter3d&quot;: [{&quot;line&quot;: {&quot;colorbar&quot;: {&quot;outlinewidth&quot;: 0, &quot;ticks&quot;: &quot;&quot;}}, &quot;marker&quot;: {&quot;colorbar&quot;: {&quot;outlinewidth&quot;: 0, &quot;ticks&quot;: &quot;&quot;}}, &quot;type&quot;: &quot;scatter3d&quot;}], &quot;scattercarpet&quot;: [{&quot;marker&quot;: {&quot;colorbar&quot;: {&quot;outlinewidth&quot;: 0, &quot;ticks&quot;: &quot;&quot;}}, &quot;type&quot;: &quot;scattercarpet&quot;}], &quot;scattergeo&quot;: [{&quot;marker&quot;: {&quot;colorbar&quot;: {&quot;outlinewidth&quot;: 0, &quot;ticks&quot;: &quot;&quot;}}, &quot;type&quot;: &quot;scattergeo&quot;}], &quot;scattergl&quot;: [{&quot;marker&quot;: {&quot;colorbar&quot;: {&quot;outlinewidth&quot;: 0, &quot;ticks&quot;: &quot;&quot;}}, &quot;type&quot;: &quot;scattergl&quot;}], &quot;scattermapbox&quot;: [{&quot;marker&quot;: {&quot;colorbar&quot;: {&quot;outlinewidth&quot;: 0, &quot;ticks&quot;: &quot;&quot;}}, &quot;type&quot;: &quot;scattermapbox&quot;}], &quot;scatterpolar&quot;: [{&quot;marker&quot;: {&quot;colorbar&quot;: {&quot;outlinewidth&quot;: 0, &quot;ticks&quot;: &quot;&quot;}}, &quot;type&quot;: &quot;scatterpolar&quot;}], &quot;scatterpolargl&quot;: [{&quot;marker&quot;: {&quot;colorbar&quot;: {&quot;outlinewidth&quot;: 0, &quot;ticks&quot;: &quot;&quot;}}, &quot;type&quot;: &quot;scatterpolargl&quot;}], &quot;scatterternary&quot;: [{&quot;marker&quot;: {&quot;colorbar&quot;: {&quot;outlinewidth&quot;: 0, &quot;ticks&quot;: &quot;&quot;}}, &quot;type&quot;: &quot;scatterternary&quot;}], &quot;surface&quot;: [{&quot;colorbar&quot;: {&quot;outlinewidth&quot;: 0, &quot;ticks&quot;: &quot;&quot;}, &quot;colorscale&quot;: [[0.0, &quot;#0d0887&quot;], [0.1111111111111111, &quot;#46039f&quot;], [0.2222222222222222, &quot;#7201a8&quot;], [0.3333333333333333, &quot;#9c179e&quot;], [0.4444444444444444, &quot;#bd3786&quot;], [0.5555555555555556, &quot;#d8576b&quot;], [0.6666666666666666, &quot;#ed7953&quot;], [0.7777777777777778, &quot;#fb9f3a&quot;], [0.8888888888888888, &quot;#fdca26&quot;], [1.0, &quot;#f0f921&quot;]], &quot;type&quot;: &quot;surface&quot;}], &quot;table&quot;: [{&quot;cells&quot;: {&quot;fill&quot;: {&quot;color&quot;: &quot;#EBF0F8&quot;}, &quot;line&quot;: {&quot;color&quot;: &quot;white&quot;}}, &quot;header&quot;: {&quot;fill&quot;: {&quot;color&quot;: &quot;#C8D4E3&quot;}, &quot;line&quot;: {&quot;color&quot;: &quot;white&quot;}}, &quot;type&quot;: &quot;table&quot;}]}, &quot;layout&quot;: {&quot;annotationdefaults&quot;: {&quot;arrowcolor&quot;: &quot;#2a3f5f&quot;, &quot;arrowhead&quot;: 0, &quot;arrowwidth&quot;: 1}, &quot;coloraxis&quot;: {&quot;colorbar&quot;: {&quot;outlinewidth&quot;: 0, &quot;ticks&quot;: &quot;&quot;}}, &quot;colorscale&quot;: {&quot;diverging&quot;: [[0, &quot;#8e0152&quot;], [0.1, &quot;#c51b7d&quot;], [0.2, &quot;#de77ae&quot;], [0.3, &quot;#f1b6da&quot;], [0.4, &quot;#fde0ef&quot;], [0.5, &quot;#f7f7f7&quot;], [0.6, &quot;#e6f5d0&quot;], [0.7, &quot;#b8e186&quot;], [0.8, &quot;#7fbc41&quot;], [0.9, &quot;#4d9221&quot;], [1, &quot;#276419&quot;]], &quot;sequential&quot;: [[0.0, &quot;#0d0887&quot;], [0.1111111111111111, &quot;#46039f&quot;], [0.2222222222222222, &quot;#7201a8&quot;], [0.3333333333333333, &quot;#9c179e&quot;], [0.4444444444444444, &quot;#bd3786&quot;], [0.5555555555555556, &quot;#d8576b&quot;], [0.6666666666666666, &quot;#ed7953&quot;], [0.7777777777777778, &quot;#fb9f3a&quot;], [0.8888888888888888, &quot;#fdca26&quot;], [1.0, &quot;#f0f921&quot;]], &quot;sequentialminus&quot;: [[0.0, &quot;#0d0887&quot;], [0.1111111111111111, &quot;#46039f&quot;], [0.2222222222222222, &quot;#7201a8&quot;], [0.3333333333333333, &quot;#9c179e&quot;], [0.4444444444444444, &quot;#bd3786&quot;], [0.5555555555555556, &quot;#d8576b&quot;], [0.6666666666666666, &quot;#ed7953&quot;], [0.7777777777777778, &quot;#fb9f3a&quot;], [0.8888888888888888, &quot;#fdca26&quot;], [1.0, &quot;#f0f921&quot;]]}, &quot;colorway&quot;: [&quot;#636efa&quot;, &quot;#EF553B&quot;, &quot;#00cc96&quot;, &quot;#ab63fa&quot;, &quot;#FFA15A&quot;, &quot;#19d3f3&quot;, &quot;#FF6692&quot;, &quot;#B6E880&quot;, &quot;#FF97FF&quot;, &quot;#FECB52&quot;], &quot;font&quot;: {&quot;color&quot;: &quot;#2a3f5f&quot;}, &quot;geo&quot;: {&quot;bgcolor&quot;: &quot;white&quot;, &quot;lakecolor&quot;: &quot;white&quot;, &quot;landcolor&quot;: &quot;#E5ECF6&quot;, &quot;showlakes&quot;: true, &quot;showland&quot;: true, &quot;subunitcolor&quot;: &quot;white&quot;}, &quot;hoverlabel&quot;: {&quot;align&quot;: &quot;left&quot;}, &quot;hovermode&quot;: &quot;closest&quot;, &quot;mapbox&quot;: {&quot;style&quot;: &quot;light&quot;}, &quot;paper_bgcolor&quot;: &quot;white&quot;, &quot;plot_bgcolor&quot;: &quot;#E5ECF6&quot;, &quot;polar&quot;: {&quot;angularaxis&quot;: {&quot;gridcolor&quot;: &quot;white&quot;, &quot;linecolor&quot;: &quot;white&quot;, &quot;ticks&quot;: &quot;&quot;}, &quot;bgcolor&quot;: &quot;#E5ECF6&quot;, &quot;radialaxis&quot;: {&quot;gridcolor&quot;: &quot;white&quot;, &quot;linecolor&quot;: &quot;white&quot;, &quot;ticks&quot;: &quot;&quot;}}, &quot;scene&quot;: {&quot;xaxis&quot;: {&quot;backgroundcolor&quot;: &quot;#E5ECF6&quot;, &quot;gridcolor&quot;: &quot;white&quot;, &quot;gridwidth&quot;: 2, &quot;linecolor&quot;: &quot;white&quot;, &quot;showbackground&quot;: true, &quot;ticks&quot;: &quot;&quot;, &quot;zerolinecolor&quot;: &quot;white&quot;}, &quot;yaxis&quot;: {&quot;backgroundcolor&quot;: &quot;#E5ECF6&quot;, &quot;gridcolor&quot;: &quot;white&quot;, &quot;gridwidth&quot;: 2, &quot;linecolor&quot;: &quot;white&quot;, &quot;showbackground&quot;: true, &quot;ticks&quot;: &quot;&quot;, &quot;zerolinecolor&quot;: &quot;white&quot;}, &quot;zaxis&quot;: {&quot;backgroundcolor&quot;: &quot;#E5ECF6&quot;, &quot;gridcolor&quot;: &quot;white&quot;, &quot;gridwidth&quot;: 2, &quot;linecolor&quot;: &quot;white&quot;, &quot;showbackground&quot;: true, &quot;ticks&quot;: &quot;&quot;, &quot;zerolinecolor&quot;: &quot;white&quot;}}, &quot;shapedefaults&quot;: {&quot;line&quot;: {&quot;color&quot;: &quot;#2a3f5f&quot;}}, &quot;ternary&quot;: {&quot;aaxis&quot;: {&quot;gridcolor&quot;: &quot;white&quot;, &quot;linecolor&quot;: &quot;white&quot;, &quot;ticks&quot;: &quot;&quot;}, &quot;baxis&quot;: {&quot;gridcolor&quot;: &quot;white&quot;, &quot;linecolor&quot;: &quot;white&quot;, &quot;ticks&quot;: &quot;&quot;}, &quot;bgcolor&quot;: &quot;#E5ECF6&quot;, &quot;caxis&quot;: {&quot;gridcolor&quot;: &quot;white&quot;, &quot;linecolor&quot;: &quot;white&quot;, &quot;ticks&quot;: &quot;&quot;}}, &quot;title&quot;: {&quot;x&quot;: 0.05}, &quot;xaxis&quot;: {&quot;automargin&quot;: true, &quot;gridcolor&quot;: &quot;white&quot;, &quot;linecolor&quot;: &quot;white&quot;, &quot;ticks&quot;: &quot;&quot;, &quot;title&quot;: {&quot;standoff&quot;: 15}, &quot;zerolinecolor&quot;: &quot;white&quot;, &quot;zerolinewidth&quot;: 2}, &quot;yaxis&quot;: {&quot;automargin&quot;: true, &quot;gridcolor&quot;: &quot;white&quot;, &quot;linecolor&quot;: &quot;white&quot;, &quot;ticks&quot;: &quot;&quot;, &quot;title&quot;: {&quot;standoff&quot;: 15}, &quot;zerolinecolor&quot;: &quot;white&quot;, &quot;zerolinewidth&quot;: 2}}}, &quot;title&quot;: {&quot;text&quot;: &quot;Distribution of Violations for the Black and African American Population&quot;, &quot;x&quot;: 0.5, &quot;xanchor&quot;: &quot;center&quot;, &quot;y&quot;: 0.9, &quot;yanchor&quot;: &quot;top&quot;}},
            {&quot;responsive&quot;: true}
        )
    };
    if (document.getElementById(&quot;e2253a01-4bfc-40ef-b0da-db6e7e41fad0&quot;)) {
        Plotly.newPlot(
            'e2253a01-4bfc-40ef-b0da-db6e7e41fad0',
            [{&quot;hovertext&quot;: [&quot;all food establishments that prepare, sell, or store hot food shall have adequate hot food storage f ...&quot;, &quot;All hot food shall be stored at a temperature of 140\u00b0F or higher, all cold food shall be stored at a ...&quot;, &quot;No person affected with or carrying any disease in a communicable form or afflicted with boils, infe ...&quot;, &quot;In food establishments, there shall be adequate sewage and waste water disposal facilities that comp ...&quot;, &quot;Adequate and convenient toilet facilities shall be provided.\u00a0 They should be properly designed, main ...&quot;, &quot;All food should be properly protected from contamination during storage, preparation, display, servi ...&quot;, &quot;All necessary control measures shall be used to effectively minimize or eliminate the presence of ro ...&quot;, &quot;The area outside of the establishment used for the storage of garbage shall be clean at all times an ...&quot;, &quot;A certified food service manager must be present in all establishments at which potentially hazardou ...&quot;, &quot;All dishwashing machines must be of a type that complies with all requirements of the plumbing secti ...&quot;, &quot;A separate and distinct offense shall be deemed to have been committed for each Minor violation that ...&quot;, &quot;All food not stored in the original container shall be stored in properly labeled containers, the li ...&quot;, &quot;Containers and utensils shall be inverted, covered, or otherwise protected from contamination until  ...&quot;, &quot;All food and non-food contact equipment and utensils shall be smooth, easily cleanable, and durable, ...&quot;, &quot;All utensils shall be thoroughly cleaned and sanitized after each usage, all food and non-food conta ...&quot;, &quot;The floors shall be constructed per code, be smooth and easily cleaned, and be kept clean and in goo ...&quot;, &quot;The walls and ceilings shall be in good repair and easily cleaned, use dustless cleaning methods. ...&quot;, &quot;All rooms in which food or drink is prepared, or in which utensils are washed, shall be lighted so t ...&quot;, &quot;Toilet rooms shall be completely enclosed and shall be vented to the outside air or mechanically ven ...&quot;, &quot;The flow of air discharged from kitchen fans shall always be through a duct to a point above the roo ...&quot;, &quot;All food establishments that display, prepare, or store potentially hazardous foods shall have calib ...&quot;, &quot;All parts of the food establishment and all parts of the property used in connection with the operat ...&quot;, null], &quot;marker&quot;: {&quot;color&quot;: &quot;lightgreen&quot;, &quot;line&quot;: {&quot;width&quot;: 1.5}}, &quot;name&quot;: &quot;Hispanic or Latino&quot;, &quot;opacity&quot;: 0.8, &quot;type&quot;: &quot;bar&quot;, &quot;x&quot;: [2, 3, 5, 10, 11, 16, 18, 19, 21, 24, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 55], &quot;y&quot;: [0.024206279600070164, 0.03224580482956207, 0.016692977840145003, 0.017306905221306203, 0.015435888440624452, 0.02023036894112144, 0.08975033619832778, 0.02207215108460504, 0.02081506168508449, 0.01736537449570251, 0.026428112027129743, 0.02327077120972929, 0.015406653803426299, 0.07981055955095598, 0.0894872244635444, 0.1010349061568146, 0.09890077764134947, 0.0511898497339648, 0.02020113430392329, 0.09887154300415132, 0.02996550312810618, 0.061071157106940305, 0.028211424896217037]}],
            {&quot;height&quot;: 500, &quot;template&quot;: {&quot;data&quot;: {&quot;bar&quot;: [{&quot;error_x&quot;: {&quot;color&quot;: &quot;#2a3f5f&quot;}, &quot;error_y&quot;: {&quot;color&quot;: &quot;#2a3f5f&quot;}, &quot;marker&quot;: {&quot;line&quot;: {&quot;color&quot;: &quot;#E5ECF6&quot;, &quot;width&quot;: 0.5}}, &quot;type&quot;: &quot;bar&quot;}], &quot;barpolar&quot;: [{&quot;marker&quot;: {&quot;line&quot;: {&quot;color&quot;: &quot;#E5ECF6&quot;, &quot;width&quot;: 0.5}}, &quot;type&quot;: &quot;barpolar&quot;}], &quot;carpet&quot;: [{&quot;aaxis&quot;: {&quot;endlinecolor&quot;: &quot;#2a3f5f&quot;, &quot;gridcolor&quot;: &quot;white&quot;, &quot;linecolor&quot;: &quot;white&quot;, &quot;minorgridcolor&quot;: &quot;white&quot;, &quot;startlinecolor&quot;: &quot;#2a3f5f&quot;}, &quot;baxis&quot;: {&quot;endlinecolor&quot;: &quot;#2a3f5f&quot;, &quot;gridcolor&quot;: &quot;white&quot;, &quot;linecolor&quot;: &quot;white&quot;, &quot;minorgridcolor&quot;: &quot;white&quot;, &quot;startlinecolor&quot;: &quot;#2a3f5f&quot;}, &quot;type&quot;: &quot;carpet&quot;}], &quot;choropleth&quot;: [{&quot;colorbar&quot;: {&quot;outlinewidth&quot;: 0, &quot;ticks&quot;: &quot;&quot;}, &quot;type&quot;: &quot;choropleth&quot;}], &quot;contour&quot;: [{&quot;colorbar&quot;: {&quot;outlinewidth&quot;: 0, &quot;ticks&quot;: &quot;&quot;}, &quot;colorscale&quot;: [[0.0, &quot;#0d0887&quot;], [0.1111111111111111, &quot;#46039f&quot;], [0.2222222222222222, &quot;#7201a8&quot;], [0.3333333333333333, &quot;#9c179e&quot;], [0.4444444444444444, &quot;#bd3786&quot;], [0.5555555555555556, &quot;#d8576b&quot;], [0.6666666666666666, &quot;#ed7953&quot;], [0.7777777777777778, &quot;#fb9f3a&quot;], [0.8888888888888888, &quot;#fdca26&quot;], [1.0, &quot;#f0f921&quot;]], &quot;type&quot;: &quot;contour&quot;}], &quot;contourcarpet&quot;: [{&quot;colorbar&quot;: {&quot;outlinewidth&quot;: 0, &quot;ticks&quot;: &quot;&quot;}, &quot;type&quot;: &quot;contourcarpet&quot;}], &quot;heatmap&quot;: [{&quot;colorbar&quot;: {&quot;outlinewidth&quot;: 0, &quot;ticks&quot;: &quot;&quot;}, &quot;colorscale&quot;: [[0.0, &quot;#0d0887&quot;], [0.1111111111111111, &quot;#46039f&quot;], [0.2222222222222222, &quot;#7201a8&quot;], [0.3333333333333333, &quot;#9c179e&quot;], [0.4444444444444444, &quot;#bd3786&quot;], [0.5555555555555556, &quot;#d8576b&quot;], [0.6666666666666666, &quot;#ed7953&quot;], [0.7777777777777778, &quot;#fb9f3a&quot;], [0.8888888888888888, &quot;#fdca26&quot;], [1.0, &quot;#f0f921&quot;]], &quot;type&quot;: &quot;heatmap&quot;}], &quot;heatmapgl&quot;: [{&quot;colorbar&quot;: {&quot;outlinewidth&quot;: 0, &quot;ticks&quot;: &quot;&quot;}, &quot;colorscale&quot;: [[0.0, &quot;#0d0887&quot;], [0.1111111111111111, &quot;#46039f&quot;], [0.2222222222222222, &quot;#7201a8&quot;], [0.3333333333333333, &quot;#9c179e&quot;], [0.4444444444444444, &quot;#bd3786&quot;], [0.5555555555555556, &quot;#d8576b&quot;], [0.6666666666666666, &quot;#ed7953&quot;], [0.7777777777777778, &quot;#fb9f3a&quot;], [0.8888888888888888, &quot;#fdca26&quot;], [1.0, &quot;#f0f921&quot;]], &quot;type&quot;: &quot;heatmapgl&quot;}], &quot;histogram&quot;: [{&quot;marker&quot;: {&quot;colorbar&quot;: {&quot;outlinewidth&quot;: 0, &quot;ticks&quot;: &quot;&quot;}}, &quot;type&quot;: &quot;histogram&quot;}], &quot;histogram2d&quot;: [{&quot;colorbar&quot;: {&quot;outlinewidth&quot;: 0, &quot;ticks&quot;: &quot;&quot;}, &quot;colorscale&quot;: [[0.0, &quot;#0d0887&quot;], [0.1111111111111111, &quot;#46039f&quot;], [0.2222222222222222, &quot;#7201a8&quot;], [0.3333333333333333, &quot;#9c179e&quot;], [0.4444444444444444, &quot;#bd3786&quot;], [0.5555555555555556, &quot;#d8576b&quot;], [0.6666666666666666, &quot;#ed7953&quot;], [0.7777777777777778, &quot;#fb9f3a&quot;], [0.8888888888888888, &quot;#fdca26&quot;], [1.0, &quot;#f0f921&quot;]], &quot;type&quot;: &quot;histogram2d&quot;}], &quot;histogram2dcontour&quot;: [{&quot;colorbar&quot;: {&quot;outlinewidth&quot;: 0, &quot;ticks&quot;: &quot;&quot;}, &quot;colorscale&quot;: [[0.0, &quot;#0d0887&quot;], [0.1111111111111111, &quot;#46039f&quot;], [0.2222222222222222, &quot;#7201a8&quot;], [0.3333333333333333, &quot;#9c179e&quot;], [0.4444444444444444, &quot;#bd3786&quot;], [0.5555555555555556, &quot;#d8576b&quot;], [0.6666666666666666, &quot;#ed7953&quot;], [0.7777777777777778, &quot;#fb9f3a&quot;], [0.8888888888888888, &quot;#fdca26&quot;], [1.0, &quot;#f0f921&quot;]], &quot;type&quot;: &quot;histogram2dcontour&quot;}], &quot;mesh3d&quot;: [{&quot;colorbar&quot;: {&quot;outlinewidth&quot;: 0, &quot;ticks&quot;: &quot;&quot;}, &quot;type&quot;: &quot;mesh3d&quot;}], &quot;parcoords&quot;: [{&quot;line&quot;: {&quot;colorbar&quot;: {&quot;outlinewidth&quot;: 0, &quot;ticks&quot;: &quot;&quot;}}, &quot;type&quot;: &quot;parcoords&quot;}], &quot;pie&quot;: [{&quot;automargin&quot;: true, &quot;type&quot;: &quot;pie&quot;}], &quot;scatter&quot;: [{&quot;marker&quot;: {&quot;colorbar&quot;: {&quot;outlinewidth&quot;: 0, &quot;ticks&quot;: &quot;&quot;}}, &quot;type&quot;: &quot;scatter&quot;}], &quot;scatter3d&quot;: [{&quot;line&quot;: {&quot;colorbar&quot;: {&quot;outlinewidth&quot;: 0, &quot;ticks&quot;: &quot;&quot;}}, &quot;marker&quot;: {&quot;colorbar&quot;: {&quot;outlinewidth&quot;: 0, &quot;ticks&quot;: &quot;&quot;}}, &quot;type&quot;: &quot;scatter3d&quot;}], &quot;scattercarpet&quot;: [{&quot;marker&quot;: {&quot;colorbar&quot;: {&quot;outlinewidth&quot;: 0, &quot;ticks&quot;: &quot;&quot;}}, &quot;type&quot;: &quot;scattercarpet&quot;}], &quot;scattergeo&quot;: [{&quot;marker&quot;: {&quot;colorbar&quot;: {&quot;outlinewidth&quot;: 0, &quot;ticks&quot;: &quot;&quot;}}, &quot;type&quot;: &quot;scattergeo&quot;}], &quot;scattergl&quot;: [{&quot;marker&quot;: {&quot;colorbar&quot;: {&quot;outlinewidth&quot;: 0, &quot;ticks&quot;: &quot;&quot;}}, &quot;type&quot;: &quot;scattergl&quot;}], &quot;scattermapbox&quot;: [{&quot;marker&quot;: {&quot;colorbar&quot;: {&quot;outlinewidth&quot;: 0, &quot;ticks&quot;: &quot;&quot;}}, &quot;type&quot;: &quot;scattermapbox&quot;}], &quot;scatterpolar&quot;: [{&quot;marker&quot;: {&quot;colorbar&quot;: {&quot;outlinewidth&quot;: 0, &quot;ticks&quot;: &quot;&quot;}}, &quot;type&quot;: &quot;scatterpolar&quot;}], &quot;scatterpolargl&quot;: [{&quot;marker&quot;: {&quot;colorbar&quot;: {&quot;outlinewidth&quot;: 0, &quot;ticks&quot;: &quot;&quot;}}, &quot;type&quot;: &quot;scatterpolargl&quot;}], &quot;scatterternary&quot;: [{&quot;marker&quot;: {&quot;colorbar&quot;: {&quot;outlinewidth&quot;: 0, &quot;ticks&quot;: &quot;&quot;}}, &quot;type&quot;: &quot;scatterternary&quot;}], &quot;surface&quot;: [{&quot;colorbar&quot;: {&quot;outlinewidth&quot;: 0, &quot;ticks&quot;: &quot;&quot;}, &quot;colorscale&quot;: [[0.0, &quot;#0d0887&quot;], [0.1111111111111111, &quot;#46039f&quot;], [0.2222222222222222, &quot;#7201a8&quot;], [0.3333333333333333, &quot;#9c179e&quot;], [0.4444444444444444, &quot;#bd3786&quot;], [0.5555555555555556, &quot;#d8576b&quot;], [0.6666666666666666, &quot;#ed7953&quot;], [0.7777777777777778, &quot;#fb9f3a&quot;], [0.8888888888888888, &quot;#fdca26&quot;], [1.0, &quot;#f0f921&quot;]], &quot;type&quot;: &quot;surface&quot;}], &quot;table&quot;: [{&quot;cells&quot;: {&quot;fill&quot;: {&quot;color&quot;: &quot;#EBF0F8&quot;}, &quot;line&quot;: {&quot;color&quot;: &quot;white&quot;}}, &quot;header&quot;: {&quot;fill&quot;: {&quot;color&quot;: &quot;#C8D4E3&quot;}, &quot;line&quot;: {&quot;color&quot;: &quot;white&quot;}}, &quot;type&quot;: &quot;table&quot;}]}, &quot;layout&quot;: {&quot;annotationdefaults&quot;: {&quot;arrowcolor&quot;: &quot;#2a3f5f&quot;, &quot;arrowhead&quot;: 0, &quot;arrowwidth&quot;: 1}, &quot;coloraxis&quot;: {&quot;colorbar&quot;: {&quot;outlinewidth&quot;: 0, &quot;ticks&quot;: &quot;&quot;}}, &quot;colorscale&quot;: {&quot;diverging&quot;: [[0, &quot;#8e0152&quot;], [0.1, &quot;#c51b7d&quot;], [0.2, &quot;#de77ae&quot;], [0.3, &quot;#f1b6da&quot;], [0.4, &quot;#fde0ef&quot;], [0.5, &quot;#f7f7f7&quot;], [0.6, &quot;#e6f5d0&quot;], [0.7, &quot;#b8e186&quot;], [0.8, &quot;#7fbc41&quot;], [0.9, &quot;#4d9221&quot;], [1, &quot;#276419&quot;]], &quot;sequential&quot;: [[0.0, &quot;#0d0887&quot;], [0.1111111111111111, &quot;#46039f&quot;], [0.2222222222222222, &quot;#7201a8&quot;], [0.3333333333333333, &quot;#9c179e&quot;], [0.4444444444444444, &quot;#bd3786&quot;], [0.5555555555555556, &quot;#d8576b&quot;], [0.6666666666666666, &quot;#ed7953&quot;], [0.7777777777777778, &quot;#fb9f3a&quot;], [0.8888888888888888, &quot;#fdca26&quot;], [1.0, &quot;#f0f921&quot;]], &quot;sequentialminus&quot;: [[0.0, &quot;#0d0887&quot;], [0.1111111111111111, &quot;#46039f&quot;], [0.2222222222222222, &quot;#7201a8&quot;], [0.3333333333333333, &quot;#9c179e&quot;], [0.4444444444444444, &quot;#bd3786&quot;], [0.5555555555555556, &quot;#d8576b&quot;], [0.6666666666666666, &quot;#ed7953&quot;], [0.7777777777777778, &quot;#fb9f3a&quot;], [0.8888888888888888, &quot;#fdca26&quot;], [1.0, &quot;#f0f921&quot;]]}, &quot;colorway&quot;: [&quot;#636efa&quot;, &quot;#EF553B&quot;, &quot;#00cc96&quot;, &quot;#ab63fa&quot;, &quot;#FFA15A&quot;, &quot;#19d3f3&quot;, &quot;#FF6692&quot;, &quot;#B6E880&quot;, &quot;#FF97FF&quot;, &quot;#FECB52&quot;], &quot;font&quot;: {&quot;color&quot;: &quot;#2a3f5f&quot;}, &quot;geo&quot;: {&quot;bgcolor&quot;: &quot;white&quot;, &quot;lakecolor&quot;: &quot;white&quot;, &quot;landcolor&quot;: &quot;#E5ECF6&quot;, &quot;showlakes&quot;: true, &quot;showland&quot;: true, &quot;subunitcolor&quot;: &quot;white&quot;}, &quot;hoverlabel&quot;: {&quot;align&quot;: &quot;left&quot;}, &quot;hovermode&quot;: &quot;closest&quot;, &quot;mapbox&quot;: {&quot;style&quot;: &quot;light&quot;}, &quot;paper_bgcolor&quot;: &quot;white&quot;, &quot;plot_bgcolor&quot;: &quot;#E5ECF6&quot;, &quot;polar&quot;: {&quot;angularaxis&quot;: {&quot;gridcolor&quot;: &quot;white&quot;, &quot;linecolor&quot;: &quot;white&quot;, &quot;ticks&quot;: &quot;&quot;}, &quot;bgcolor&quot;: &quot;#E5ECF6&quot;, &quot;radialaxis&quot;: {&quot;gridcolor&quot;: &quot;white&quot;, &quot;linecolor&quot;: &quot;white&quot;, &quot;ticks&quot;: &quot;&quot;}}, &quot;scene&quot;: {&quot;xaxis&quot;: {&quot;backgroundcolor&quot;: &quot;#E5ECF6&quot;, &quot;gridcolor&quot;: &quot;white&quot;, &quot;gridwidth&quot;: 2, &quot;linecolor&quot;: &quot;white&quot;, &quot;showbackground&quot;: true, &quot;ticks&quot;: &quot;&quot;, &quot;zerolinecolor&quot;: &quot;white&quot;}, &quot;yaxis&quot;: {&quot;backgroundcolor&quot;: &quot;#E5ECF6&quot;, &quot;gridcolor&quot;: &quot;white&quot;, &quot;gridwidth&quot;: 2, &quot;linecolor&quot;: &quot;white&quot;, &quot;showbackground&quot;: true, &quot;ticks&quot;: &quot;&quot;, &quot;zerolinecolor&quot;: &quot;white&quot;}, &quot;zaxis&quot;: {&quot;backgroundcolor&quot;: &quot;#E5ECF6&quot;, &quot;gridcolor&quot;: &quot;white&quot;, &quot;gridwidth&quot;: 2, &quot;linecolor&quot;: &quot;white&quot;, &quot;showbackground&quot;: true, &quot;ticks&quot;: &quot;&quot;, &quot;zerolinecolor&quot;: &quot;white&quot;}}, &quot;shapedefaults&quot;: {&quot;line&quot;: {&quot;color&quot;: &quot;#2a3f5f&quot;}}, &quot;ternary&quot;: {&quot;aaxis&quot;: {&quot;gridcolor&quot;: &quot;white&quot;, &quot;linecolor&quot;: &quot;white&quot;, &quot;ticks&quot;: &quot;&quot;}, &quot;baxis&quot;: {&quot;gridcolor&quot;: &quot;white&quot;, &quot;linecolor&quot;: &quot;white&quot;, &quot;ticks&quot;: &quot;&quot;}, &quot;bgcolor&quot;: &quot;#E5ECF6&quot;, &quot;caxis&quot;: {&quot;gridcolor&quot;: &quot;white&quot;, &quot;linecolor&quot;: &quot;white&quot;, &quot;ticks&quot;: &quot;&quot;}}, &quot;title&quot;: {&quot;x&quot;: 0.05}, &quot;xaxis&quot;: {&quot;automargin&quot;: true, &quot;gridcolor&quot;: &quot;white&quot;, &quot;linecolor&quot;: &quot;white&quot;, &quot;ticks&quot;: &quot;&quot;, &quot;title&quot;: {&quot;standoff&quot;: 15}, &quot;zerolinecolor&quot;: &quot;white&quot;, &quot;zerolinewidth&quot;: 2}, &quot;yaxis&quot;: {&quot;automargin&quot;: true, &quot;gridcolor&quot;: &quot;white&quot;, &quot;linecolor&quot;: &quot;white&quot;, &quot;ticks&quot;: &quot;&quot;, &quot;title&quot;: {&quot;standoff&quot;: 15}, &quot;zerolinecolor&quot;: &quot;white&quot;, &quot;zerolinewidth&quot;: 2}}}, &quot;title&quot;: {&quot;text&quot;: &quot;Distribution of Violations for the Hispanic or Latino Population&quot;, &quot;x&quot;: 0.5, &quot;xanchor&quot;: &quot;center&quot;, &quot;y&quot;: 0.9, &quot;yanchor&quot;: &quot;top&quot;}},
            {&quot;responsive&quot;: true}
        )
    };
    if (document.getElementById(&quot;55807f9e-8d15-45ec-9772-a19c0f25eddc&quot;)) {
        Plotly.newPlot(
            '55807f9e-8d15-45ec-9772-a19c0f25eddc',
            [{&quot;hovertext&quot;: [&quot;all food establishments that prepare, sell, or store hot food shall have adequate hot food storage f ...&quot;, &quot;All hot food shall be stored at a temperature of 140\u00b0F or higher, all cold food shall be stored at a ...&quot;, &quot;No person affected with or carrying any disease in a communicable form or afflicted with boils, infe ...&quot;, &quot;In food establishments, there shall be adequate sewage and waste water disposal facilities that comp ...&quot;, &quot;Adequate and convenient toilet facilities shall be provided.\u00a0 They should be properly designed, main ...&quot;, &quot;All food should be properly protected from contamination during storage, preparation, display, servi ...&quot;, &quot;All necessary control measures shall be used to effectively minimize or eliminate the presence of ro ...&quot;, &quot;The area outside of the establishment used for the storage of garbage shall be clean at all times an ...&quot;, &quot;A certified food service manager must be present in all establishments at which potentially hazardou ...&quot;, &quot;All dishwashing machines must be of a type that complies with all requirements of the plumbing secti ...&quot;, &quot;A separate and distinct offense shall be deemed to have been committed for each Minor violation that ...&quot;, &quot;All food not stored in the original container shall be stored in properly labeled containers, the li ...&quot;, &quot;Containers and utensils shall be inverted, covered, or otherwise protected from contamination until  ...&quot;, &quot;All food and non-food contact equipment and utensils shall be smooth, easily cleanable, and durable, ...&quot;, &quot;All utensils shall be thoroughly cleaned and sanitized after each usage, all food and non-food conta ...&quot;, &quot;The floors shall be constructed per code, be smooth and easily cleaned, and be kept clean and in goo ...&quot;, &quot;The walls and ceilings shall be in good repair and easily cleaned, use dustless cleaning methods. ...&quot;, &quot;All rooms in which food or drink is prepared, or in which utensils are washed, shall be lighted so t ...&quot;, &quot;Toilet rooms shall be completely enclosed and shall be vented to the outside air or mechanically ven ...&quot;, &quot;The flow of air discharged from kitchen fans shall always be through a duct to a point above the roo ...&quot;, &quot;All food establishments that display, prepare, or store potentially hazardous foods shall have calib ...&quot;, &quot;All parts of the food establishment and all parts of the property used in connection with the operat ...&quot;, null], &quot;marker&quot;: {&quot;color&quot;: &quot;lightskyblue&quot;, &quot;line&quot;: {&quot;width&quot;: 1.5}}, &quot;name&quot;: &quot;White Alone&quot;, &quot;opacity&quot;: 0.8, &quot;type&quot;: &quot;bar&quot;, &quot;x&quot;: [2, 3, 5, 10, 11, 16, 18, 19, 21, 24, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 55], &quot;y&quot;: [0.021645277662783135, 0.03728783488083269, 0.01518914976245392, 0.015908687681116564, 0.015504563644607408, 0.03178780531078124, 0.08460977388767323, 0.019664084215506535, 0.020225915193092435, 0.01688449937902892, 0.03650915685926627, 0.026504622784710313, 0.016914069430480808, 0.08786247954738108, 0.09092790821456029, 0.10348532339779605, 0.09428903739625841, 0.0443156504425651, 0.017259053364086188, 0.0962800875273523, 0.026277919056912492, 0.052762828473988214, 0.02786484515149723]}],
            {&quot;height&quot;: 500, &quot;template&quot;: {&quot;data&quot;: {&quot;bar&quot;: [{&quot;error_x&quot;: {&quot;color&quot;: &quot;#2a3f5f&quot;}, &quot;error_y&quot;: {&quot;color&quot;: &quot;#2a3f5f&quot;}, &quot;marker&quot;: {&quot;line&quot;: {&quot;color&quot;: &quot;#E5ECF6&quot;, &quot;width&quot;: 0.5}}, &quot;type&quot;: &quot;bar&quot;}], &quot;barpolar&quot;: [{&quot;marker&quot;: {&quot;line&quot;: {&quot;color&quot;: &quot;#E5ECF6&quot;, &quot;width&quot;: 0.5}}, &quot;type&quot;: &quot;barpolar&quot;}], &quot;carpet&quot;: [{&quot;aaxis&quot;: {&quot;endlinecolor&quot;: &quot;#2a3f5f&quot;, &quot;gridcolor&quot;: &quot;white&quot;, &quot;linecolor&quot;: &quot;white&quot;, &quot;minorgridcolor&quot;: &quot;white&quot;, &quot;startlinecolor&quot;: &quot;#2a3f5f&quot;}, &quot;baxis&quot;: {&quot;endlinecolor&quot;: &quot;#2a3f5f&quot;, &quot;gridcolor&quot;: &quot;white&quot;, &quot;linecolor&quot;: &quot;white&quot;, &quot;minorgridcolor&quot;: &quot;white&quot;, &quot;startlinecolor&quot;: &quot;#2a3f5f&quot;}, &quot;type&quot;: &quot;carpet&quot;}], &quot;choropleth&quot;: [{&quot;colorbar&quot;: {&quot;outlinewidth&quot;: 0, &quot;ticks&quot;: &quot;&quot;}, &quot;type&quot;: &quot;choropleth&quot;}], &quot;contour&quot;: [{&quot;colorbar&quot;: {&quot;outlinewidth&quot;: 0, &quot;ticks&quot;: &quot;&quot;}, &quot;colorscale&quot;: [[0.0, &quot;#0d0887&quot;], [0.1111111111111111, &quot;#46039f&quot;], [0.2222222222222222, &quot;#7201a8&quot;], [0.3333333333333333, &quot;#9c179e&quot;], [0.4444444444444444, &quot;#bd3786&quot;], [0.5555555555555556, &quot;#d8576b&quot;], [0.6666666666666666, &quot;#ed7953&quot;], [0.7777777777777778, &quot;#fb9f3a&quot;], [0.8888888888888888, &quot;#fdca26&quot;], [1.0, &quot;#f0f921&quot;]], &quot;type&quot;: &quot;contour&quot;}], &quot;contourcarpet&quot;: [{&quot;colorbar&quot;: {&quot;outlinewidth&quot;: 0, &quot;ticks&quot;: &quot;&quot;}, &quot;type&quot;: &quot;contourcarpet&quot;}], &quot;heatmap&quot;: [{&quot;colorbar&quot;: {&quot;outlinewidth&quot;: 0, &quot;ticks&quot;: &quot;&quot;}, &quot;colorscale&quot;: [[0.0, &quot;#0d0887&quot;], [0.1111111111111111, &quot;#46039f&quot;], [0.2222222222222222, &quot;#7201a8&quot;], [0.3333333333333333, &quot;#9c179e&quot;], [0.4444444444444444, &quot;#bd3786&quot;], [0.5555555555555556, &quot;#d8576b&quot;], [0.6666666666666666, &quot;#ed7953&quot;], [0.7777777777777778, &quot;#fb9f3a&quot;], [0.8888888888888888, &quot;#fdca26&quot;], [1.0, &quot;#f0f921&quot;]], &quot;type&quot;: &quot;heatmap&quot;}], &quot;heatmapgl&quot;: [{&quot;colorbar&quot;: {&quot;outlinewidth&quot;: 0, &quot;ticks&quot;: &quot;&quot;}, &quot;colorscale&quot;: [[0.0, &quot;#0d0887&quot;], [0.1111111111111111, &quot;#46039f&quot;], [0.2222222222222222, &quot;#7201a8&quot;], [0.3333333333333333, &quot;#9c179e&quot;], [0.4444444444444444, &quot;#bd3786&quot;], [0.5555555555555556, &quot;#d8576b&quot;], [0.6666666666666666, &quot;#ed7953&quot;], [0.7777777777777778, &quot;#fb9f3a&quot;], [0.8888888888888888, &quot;#fdca26&quot;], [1.0, &quot;#f0f921&quot;]], &quot;type&quot;: &quot;heatmapgl&quot;}], &quot;histogram&quot;: [{&quot;marker&quot;: {&quot;colorbar&quot;: {&quot;outlinewidth&quot;: 0, &quot;ticks&quot;: &quot;&quot;}}, &quot;type&quot;: &quot;histogram&quot;}], &quot;histogram2d&quot;: [{&quot;colorbar&quot;: {&quot;outlinewidth&quot;: 0, &quot;ticks&quot;: &quot;&quot;}, &quot;colorscale&quot;: [[0.0, &quot;#0d0887&quot;], [0.1111111111111111, &quot;#46039f&quot;], [0.2222222222222222, &quot;#7201a8&quot;], [0.3333333333333333, &quot;#9c179e&quot;], [0.4444444444444444, &quot;#bd3786&quot;], [0.5555555555555556, &quot;#d8576b&quot;], [0.6666666666666666, &quot;#ed7953&quot;], [0.7777777777777778, &quot;#fb9f3a&quot;], [0.8888888888888888, &quot;#fdca26&quot;], [1.0, &quot;#f0f921&quot;]], &quot;type&quot;: &quot;histogram2d&quot;}], &quot;histogram2dcontour&quot;: [{&quot;colorbar&quot;: {&quot;outlinewidth&quot;: 0, &quot;ticks&quot;: &quot;&quot;}, &quot;colorscale&quot;: [[0.0, &quot;#0d0887&quot;], [0.1111111111111111, &quot;#46039f&quot;], [0.2222222222222222, &quot;#7201a8&quot;], [0.3333333333333333, &quot;#9c179e&quot;], [0.4444444444444444, &quot;#bd3786&quot;], [0.5555555555555556, &quot;#d8576b&quot;], [0.6666666666666666, &quot;#ed7953&quot;], [0.7777777777777778, &quot;#fb9f3a&quot;], [0.8888888888888888, &quot;#fdca26&quot;], [1.0, &quot;#f0f921&quot;]], &quot;type&quot;: &quot;histogram2dcontour&quot;}], &quot;mesh3d&quot;: [{&quot;colorbar&quot;: {&quot;outlinewidth&quot;: 0, &quot;ticks&quot;: &quot;&quot;}, &quot;type&quot;: &quot;mesh3d&quot;}], &quot;parcoords&quot;: [{&quot;line&quot;: {&quot;colorbar&quot;: {&quot;outlinewidth&quot;: 0, &quot;ticks&quot;: &quot;&quot;}}, &quot;type&quot;: &quot;parcoords&quot;}], &quot;pie&quot;: [{&quot;automargin&quot;: true, &quot;type&quot;: &quot;pie&quot;}], &quot;scatter&quot;: [{&quot;marker&quot;: {&quot;colorbar&quot;: {&quot;outlinewidth&quot;: 0, &quot;ticks&quot;: &quot;&quot;}}, &quot;type&quot;: &quot;scatter&quot;}], &quot;scatter3d&quot;: [{&quot;line&quot;: {&quot;colorbar&quot;: {&quot;outlinewidth&quot;: 0, &quot;ticks&quot;: &quot;&quot;}}, &quot;marker&quot;: {&quot;colorbar&quot;: {&quot;outlinewidth&quot;: 0, &quot;ticks&quot;: &quot;&quot;}}, &quot;type&quot;: &quot;scatter3d&quot;}], &quot;scattercarpet&quot;: [{&quot;marker&quot;: {&quot;colorbar&quot;: {&quot;outlinewidth&quot;: 0, &quot;ticks&quot;: &quot;&quot;}}, &quot;type&quot;: &quot;scattercarpet&quot;}], &quot;scattergeo&quot;: [{&quot;marker&quot;: {&quot;colorbar&quot;: {&quot;outlinewidth&quot;: 0, &quot;ticks&quot;: &quot;&quot;}}, &quot;type&quot;: &quot;scattergeo&quot;}], &quot;scattergl&quot;: [{&quot;marker&quot;: {&quot;colorbar&quot;: {&quot;outlinewidth&quot;: 0, &quot;ticks&quot;: &quot;&quot;}}, &quot;type&quot;: &quot;scattergl&quot;}], &quot;scattermapbox&quot;: [{&quot;marker&quot;: {&quot;colorbar&quot;: {&quot;outlinewidth&quot;: 0, &quot;ticks&quot;: &quot;&quot;}}, &quot;type&quot;: &quot;scattermapbox&quot;}], &quot;scatterpolar&quot;: [{&quot;marker&quot;: {&quot;colorbar&quot;: {&quot;outlinewidth&quot;: 0, &quot;ticks&quot;: &quot;&quot;}}, &quot;type&quot;: &quot;scatterpolar&quot;}], &quot;scatterpolargl&quot;: [{&quot;marker&quot;: {&quot;colorbar&quot;: {&quot;outlinewidth&quot;: 0, &quot;ticks&quot;: &quot;&quot;}}, &quot;type&quot;: &quot;scatterpolargl&quot;}], &quot;scatterternary&quot;: [{&quot;marker&quot;: {&quot;colorbar&quot;: {&quot;outlinewidth&quot;: 0, &quot;ticks&quot;: &quot;&quot;}}, &quot;type&quot;: &quot;scatterternary&quot;}], &quot;surface&quot;: [{&quot;colorbar&quot;: {&quot;outlinewidth&quot;: 0, &quot;ticks&quot;: &quot;&quot;}, &quot;colorscale&quot;: [[0.0, &quot;#0d0887&quot;], [0.1111111111111111, &quot;#46039f&quot;], [0.2222222222222222, &quot;#7201a8&quot;], [0.3333333333333333, &quot;#9c179e&quot;], [0.4444444444444444, &quot;#bd3786&quot;], [0.5555555555555556, &quot;#d8576b&quot;], [0.6666666666666666, &quot;#ed7953&quot;], [0.7777777777777778, &quot;#fb9f3a&quot;], [0.8888888888888888, &quot;#fdca26&quot;], [1.0, &quot;#f0f921&quot;]], &quot;type&quot;: &quot;surface&quot;}], &quot;table&quot;: [{&quot;cells&quot;: {&quot;fill&quot;: {&quot;color&quot;: &quot;#EBF0F8&quot;}, &quot;line&quot;: {&quot;color&quot;: &quot;white&quot;}}, &quot;header&quot;: {&quot;fill&quot;: {&quot;color&quot;: &quot;#C8D4E3&quot;}, &quot;line&quot;: {&quot;color&quot;: &quot;white&quot;}}, &quot;type&quot;: &quot;table&quot;}]}, &quot;layout&quot;: {&quot;annotationdefaults&quot;: {&quot;arrowcolor&quot;: &quot;#2a3f5f&quot;, &quot;arrowhead&quot;: 0, &quot;arrowwidth&quot;: 1}, &quot;coloraxis&quot;: {&quot;colorbar&quot;: {&quot;outlinewidth&quot;: 0, &quot;ticks&quot;: &quot;&quot;}}, &quot;colorscale&quot;: {&quot;diverging&quot;: [[0, &quot;#8e0152&quot;], [0.1, &quot;#c51b7d&quot;], [0.2, &quot;#de77ae&quot;], [0.3, &quot;#f1b6da&quot;], [0.4, &quot;#fde0ef&quot;], [0.5, &quot;#f7f7f7&quot;], [0.6, &quot;#e6f5d0&quot;], [0.7, &quot;#b8e186&quot;], [0.8, &quot;#7fbc41&quot;], [0.9, &quot;#4d9221&quot;], [1, &quot;#276419&quot;]], &quot;sequential&quot;: [[0.0, &quot;#0d0887&quot;], [0.1111111111111111, &quot;#46039f&quot;], [0.2222222222222222, &quot;#7201a8&quot;], [0.3333333333333333, &quot;#9c179e&quot;], [0.4444444444444444, &quot;#bd3786&quot;], [0.5555555555555556, &quot;#d8576b&quot;], [0.6666666666666666, &quot;#ed7953&quot;], [0.7777777777777778, &quot;#fb9f3a&quot;], [0.8888888888888888, &quot;#fdca26&quot;], [1.0, &quot;#f0f921&quot;]], &quot;sequentialminus&quot;: [[0.0, &quot;#0d0887&quot;], [0.1111111111111111, &quot;#46039f&quot;], [0.2222222222222222, &quot;#7201a8&quot;], [0.3333333333333333, &quot;#9c179e&quot;], [0.4444444444444444, &quot;#bd3786&quot;], [0.5555555555555556, &quot;#d8576b&quot;], [0.6666666666666666, &quot;#ed7953&quot;], [0.7777777777777778, &quot;#fb9f3a&quot;], [0.8888888888888888, &quot;#fdca26&quot;], [1.0, &quot;#f0f921&quot;]]}, &quot;colorway&quot;: [&quot;#636efa&quot;, &quot;#EF553B&quot;, &quot;#00cc96&quot;, &quot;#ab63fa&quot;, &quot;#FFA15A&quot;, &quot;#19d3f3&quot;, &quot;#FF6692&quot;, &quot;#B6E880&quot;, &quot;#FF97FF&quot;, &quot;#FECB52&quot;], &quot;font&quot;: {&quot;color&quot;: &quot;#2a3f5f&quot;}, &quot;geo&quot;: {&quot;bgcolor&quot;: &quot;white&quot;, &quot;lakecolor&quot;: &quot;white&quot;, &quot;landcolor&quot;: &quot;#E5ECF6&quot;, &quot;showlakes&quot;: true, &quot;showland&quot;: true, &quot;subunitcolor&quot;: &quot;white&quot;}, &quot;hoverlabel&quot;: {&quot;align&quot;: &quot;left&quot;}, &quot;hovermode&quot;: &quot;closest&quot;, &quot;mapbox&quot;: {&quot;style&quot;: &quot;light&quot;}, &quot;paper_bgcolor&quot;: &quot;white&quot;, &quot;plot_bgcolor&quot;: &quot;#E5ECF6&quot;, &quot;polar&quot;: {&quot;angularaxis&quot;: {&quot;gridcolor&quot;: &quot;white&quot;, &quot;linecolor&quot;: &quot;white&quot;, &quot;ticks&quot;: &quot;&quot;}, &quot;bgcolor&quot;: &quot;#E5ECF6&quot;, &quot;radialaxis&quot;: {&quot;gridcolor&quot;: &quot;white&quot;, &quot;linecolor&quot;: &quot;white&quot;, &quot;ticks&quot;: &quot;&quot;}}, &quot;scene&quot;: {&quot;xaxis&quot;: {&quot;backgroundcolor&quot;: &quot;#E5ECF6&quot;, &quot;gridcolor&quot;: &quot;white&quot;, &quot;gridwidth&quot;: 2, &quot;linecolor&quot;: &quot;white&quot;, &quot;showbackground&quot;: true, &quot;ticks&quot;: &quot;&quot;, &quot;zerolinecolor&quot;: &quot;white&quot;}, &quot;yaxis&quot;: {&quot;backgroundcolor&quot;: &quot;#E5ECF6&quot;, &quot;gridcolor&quot;: &quot;white&quot;, &quot;gridwidth&quot;: 2, &quot;linecolor&quot;: &quot;white&quot;, &quot;showbackground&quot;: true, &quot;ticks&quot;: &quot;&quot;, &quot;zerolinecolor&quot;: &quot;white&quot;}, &quot;zaxis&quot;: {&quot;backgroundcolor&quot;: &quot;#E5ECF6&quot;, &quot;gridcolor&quot;: &quot;white&quot;, &quot;gridwidth&quot;: 2, &quot;linecolor&quot;: &quot;white&quot;, &quot;showbackground&quot;: true, &quot;ticks&quot;: &quot;&quot;, &quot;zerolinecolor&quot;: &quot;white&quot;}}, &quot;shapedefaults&quot;: {&quot;line&quot;: {&quot;color&quot;: &quot;#2a3f5f&quot;}}, &quot;ternary&quot;: {&quot;aaxis&quot;: {&quot;gridcolor&quot;: &quot;white&quot;, &quot;linecolor&quot;: &quot;white&quot;, &quot;ticks&quot;: &quot;&quot;}, &quot;baxis&quot;: {&quot;gridcolor&quot;: &quot;white&quot;, &quot;linecolor&quot;: &quot;white&quot;, &quot;ticks&quot;: &quot;&quot;}, &quot;bgcolor&quot;: &quot;#E5ECF6&quot;, &quot;caxis&quot;: {&quot;gridcolor&quot;: &quot;white&quot;, &quot;linecolor&quot;: &quot;white&quot;, &quot;ticks&quot;: &quot;&quot;}}, &quot;title&quot;: {&quot;x&quot;: 0.05}, &quot;xaxis&quot;: {&quot;automargin&quot;: true, &quot;gridcolor&quot;: &quot;white&quot;, &quot;linecolor&quot;: &quot;white&quot;, &quot;ticks&quot;: &quot;&quot;, &quot;title&quot;: {&quot;standoff&quot;: 15}, &quot;zerolinecolor&quot;: &quot;white&quot;, &quot;zerolinewidth&quot;: 2}, &quot;yaxis&quot;: {&quot;automargin&quot;: true, &quot;gridcolor&quot;: &quot;white&quot;, &quot;linecolor&quot;: &quot;white&quot;, &quot;ticks&quot;: &quot;&quot;, &quot;title&quot;: {&quot;standoff&quot;: 15}, &quot;zerolinecolor&quot;: &quot;white&quot;, &quot;zerolinewidth&quot;: 2}}}, &quot;title&quot;: {&quot;text&quot;: &quot;Distribution of Violations for the White Population&quot;, &quot;x&quot;: 0.5, &quot;xanchor&quot;: &quot;center&quot;, &quot;y&quot;: 0.9, &quot;yanchor&quot;: &quot;top&quot;}},
            {&quot;responsive&quot;: true}
        )
    };
&lt;/script&gt;</content><author><name>Alfonso Amayuelas, Beatriz Borges, Jade Cock, Mahmoud Said</name></author><summary type="html">What is the impact of the neighborhood?</summary></entry><entry><title type="html">Type</title><link href="http://localhost:4000/ADAknow/type/" rel="alternate" type="text/html" title="Type" /><published>2019-12-01T00:00:00+01:00</published><updated>2019-12-01T00:00:00+01:00</updated><id>http://localhost:4000/ADAknow/type</id><content type="html" xml:base="http://localhost:4000/ADAknow/type/">&lt;p&gt;The district of Chicago is full of different restaurants and catering businesses. These range from restaurants to bars to grocery stores to school cafeterias to hospitals to many others. However, these are not present at the same frequency. &lt;/p&gt;

&lt;p style=&quot;position: relative;&quot;&gt;At a first look, it's impossible to be certain on whether the difference in facilities inspections reflects some bias or simply the food business landscape in Chicago. The donut chart bellow reflects the number of inspections per &lt;span class=&quot;bt_tooltip&quot; data-tip=&quot;The original dataset had more than 440 different facility types. This number was reduced to 43 through a autonomous grouping method - which would group non-representative categories into either the closest representative one, or instead into a (newly created) miscellaneous category.&quot;&gt;business type&lt;/span&gt;, for the 9 most common types (and a tenth type, &lt;span style=&quot;font-family: monospace;font-size: 0.9em; color: white; background: #765145; border-radius: 10%; padding: 0.5% 0.75%;&quot;&gt;other types&lt;/span&gt; representing the remaining 34 categories).&lt;/p&gt;

&lt;div id=&quot;visits_chart&quot;&gt;&lt;/div&gt;

&lt;p&gt; To ascertain whether these inspections favor a particular type of business, we can examine the ratios of their inspection results. An inspection results in one of seven possible outcomes: &lt;span style=&quot;font-family: monospace;font-size: 0.9em; color: white; background: #B8BD79; border-radius: 10%; padding: 0.5% 0.75%;&quot;&gt;Pass&lt;/span&gt;, &lt;span style=&quot;font-family: monospace;font-size: 0.9em; color: #404040; background: #FED18E; border-radius: 10%; padding: 0.5% 0.75%;&quot;&gt;Pass with conditions&lt;/span&gt;, &lt;span style=&quot;font-family: monospace;font-size: 0.9em; color: white; background: #FF8C57; border-radius: 10%; padding: 0.5% 0.75%;&quot;&gt;Fail&lt;/span&gt;, &lt;span style=&quot;font-family: monospace;font-size: 0.9em; color: white; background: #EF4F43; border-radius: 10%; padding: 0.5% 0.75%;&quot;&gt;Not ready&lt;/span&gt;, &lt;span style=&quot;font-family: monospace;font-size: 0.9em; color: white; background: #373A29; border-radius: 10%; padding: 0.5% 0.75%;&quot;&gt;No entry&lt;/span&gt;, &lt;span style=&quot;font-family: monospace;font-size: 0.9em; color: white; background: #991163; border-radius: 10%; padding: 0.5% 0.75%;&quot;&gt;Out of business&lt;/span&gt;, &lt;span style=&quot;font-family: monospace;font-size: 0.9em; color: white; background: #69919F; border-radius: 10%; padding: 0.5% 0.75%;&quot;&gt;Business not located&lt;/span&gt;. You can explore these ratios yourself in the plot below.&lt;/p&gt;

&lt;p style=&quot;position: relative;&quot;&gt;The plot has 3 bars, the top one with the global average accross all entries in the data, the second the average across one &lt;span class=&quot;ct_tooltip&quot; data-tip=&quot;From the 43 food-related business types, we create 9 non-mutually-exclusive categories, based on their area of business.&quot;&gt;category&lt;/span&gt;, and the third one the average results for any one of the 43 specific business types.&lt;/p&gt;

&lt;ul class=&quot;breadcrumb&quot; id=&quot;chartoptions&quot;&gt;
  &lt;li&gt;&lt;strong&gt;Chart options - &lt;/strong&gt;All&lt;span class=&quot;divider&quot; style=&quot;margin: 0 5px 0 10px&quot;&gt;/&lt;/span&gt;&lt;/li&gt;
  &lt;li id=&quot;catgs&quot;&gt;
    &lt;a class=&quot;dropdown-toggle&quot; role=&quot;button&quot; data-toggle=&quot;dropdown&quot; href=&quot;#&quot;&gt;All categories&lt;b class=&quot;caret&quot;&gt;&lt;/b&gt;&lt;/a&gt;
    &lt;ul id=&quot;catgs-dropdown&quot; class=&quot;dropdown-menu&quot;&gt;&lt;/ul&gt;
    &lt;span class=&quot;divider&quot; style=&quot;margin: 0 5px 0 5px&quot;&gt;/&lt;/span&gt;
  &lt;/li&gt;
  &lt;li id=&quot;types&quot;&gt;
    &lt;a class=&quot;dropdown-toggle&quot; role=&quot;button&quot; data-toggle=&quot;dropdown&quot; href=&quot;#&quot;&gt;All types&lt;b class=&quot;caret&quot;&gt;&lt;/b&gt;&lt;/a&gt;
    &lt;ul id=&quot;types-dropdown&quot; class=&quot;dropdown-menu&quot;&gt;&lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;
&lt;div id=&quot;pf_chart&quot;&gt;&lt;/div&gt;

&lt;p&gt;As we can observe, the probability of passing of failing an inspection is affected by the business type. However, this may simply reflect underlying factors. A mobile food vendor, for example, is likely to have fewer financial resources than a daycare or school owner (the main entities in the infant care category). As such, the later will definitely be able to invest more into ensuring proper kitchen and serving conditions.&lt;/p&gt;

&lt;p&gt;Finally, overall, it appears that the inspections do indeed reflect the food business landscape in Chicago, as there aren't strong correlations with top or bottom facilities (passing- or failing-wise) and facilities with the least or most visits. As such, the results and inspections frequencies seem to be well balanced!&lt;/p&gt;

&lt;!-- JS --&gt;
&lt;script src=&quot;https://code.jquery.com/jquery-3.4.1.min.js&quot; integrity=&quot;sha256-CSXorXvZcTkaix6Yvo6HppcZGetbYMGWSFlBw8HfCJo=&quot; crossorigin=&quot;anonymous&quot;&gt;&lt;/script&gt;

&lt;script src=&quot;https://cdn.jsdelivr.net/npm/apexcharts&quot;&gt;&lt;/script&gt;

&lt;script&gt;
    visits = {
        'bakery': 2905,
        'children\'s services facility': 3152,
        'daycare (2 - 6 years)': 2688,
        'daycare above and under 2 years': 2356,
        'grocery store': 25014,
        'long term care': 1366,
        'not available': 4778,
        'restaurant': 130140,
        'school': 12081,
        'other types': 10347
        }
    vals = []
    names = []
    for (v in visits) {
        names.push(v)
        vals.push(visits[v])
    }
    var options = {
        chart: {
            type: 'donut',
            height: 450,
        },
        series: vals,
        labels: names,
        legend: {
            position: 'bottom',
            horizontalAlign: 'left', 
        },
        tooltip: {
                y: {
                    formatter: function(val) {
                    return val + &quot; total visits&quot;
                }
            }
        },
        colors: ['#3A0725', '#AF0F30', '#E45901', '#F7BA00', '#727D09', '#E3497E', '#E39E48', '#23D38A', '#DA56FB', '#775146']
    }
    var chart = new ApexCharts(
        document.querySelector(&quot;#visits_chart&quot;),
        options
    );
    chart.render();
&lt;/script&gt;

&lt;script&gt;
    function generate_plot(top, middle, bottom) {
        var options = {
            chart: {
                height: 350,
                type: 'bar',
                stacked: true,
                stackType: '100%'
            },
            plotOptions: {
                bar: {
                    horizontal: true,
                },
            },
            stroke: {
                width: 1,
                colors: ['#fff']
            },
            series: [{
                name: 'Pass',
                data: [top['data'][5], middle['data'][5], bottom['data'][5]]
            },{
                name: 'Pass with conditions',
                data: [top['data'][6], middle['data'][6], bottom['data'][6]]
            },{
                name: 'Fail',
                data: [top['data'][1], middle['data'][1], bottom['data'][1]]
            },{
                name: 'Not ready',
                data: [top['data'][3], middle['data'][3], bottom['data'][3]]
            },{
                name: 'No entry',
                data: [top['data'][2], middle['data'][2], bottom['data'][2]]
            },{
                name: 'Out of business',
                data: [top['data'][4], middle['data'][4], bottom['data'][4]]
            },{
                name: 'Business not located',
                data: [top['data'][0], middle['data'][0], bottom['data'][0]]
            }],
            title: {
                text: 'Average inspection results per category and type of business'
            },
            xaxis: {
                categories: [top['name'] + ' businesses', 
                             middle['name'] + (middle['name'] == 'All categories' ? '' : ' category'), 
                             bottom['name'] + (bottom['name'] == 'All types' ? '' : '-type businesses')],
            },
            tooltip: {
                    y: {
                        formatter: function(val) {
                        return val + &quot;%&quot;
                    }
                }
            },
            fill: {
                opacity: 1   
            },
            legend: {
                position: 'top',
                horizontalAlign: 'left',
                offsetX: 40
            },
            colors: ['#B8BD79', '#FED18E', '#FF8C57', '#EF4F43', '#373A29', '#991163', '#69919F']
        }
        $('div#pf_chart').html('')
        var chart = new ApexCharts(
            document.querySelector(&quot;#pf_chart&quot;),
            options
        );
        chart.render();
    }
    function get_catg_pf_ratios(catg_name, facility_types) {
        // search existing
        for (i in facility_types) {
            if (catg_name == facility_types[i]['title']) {
                return pf_ratios['per_category'][catg_name];
            }
        } 
        // otherwise, 'all catgs' selected
        return pf_ratios['all']['all']
    }
    function get_catg_type_pf_ratios(type_name, catg_name, facility_types) {
        catg_array = get_catg_pf_ratios(catg_name, facility_types)
        // search existing
        for (i in all_types) {
            if (type_name == all_types[i]) {
                return [catg_array, pf_ratios['per_type'][type_name]];
            }
        } 
        // otherwise, 'all types' selected
        return [catg_array, catg_array]
    }
    var facility_types = [
        {
            'title': 'All categories',
            'lst': ['bakery', 'banquet', 'banquet hall', 'cafeteria', 'catering',
                'charter school', &quot;children's services facility&quot;, 'coffee shop',
                'convenience', 'convenience store', 'daycare',
                'daycare (2 - 6 years)', 'daycare (2 years)',
                'daycare (under 2 years)', 'daycare above and under 2 years',
                'daycare combo 1586', 'gas station', 'golden diner',
                'grocery store', 'grocery/restaurant', 'hospital', 'kiosk',
                'liquor', 'live poultry', 'long term care', 'misc',
                'mobile food dispenser', 'mobile food preparer',
                'mobile frozen desserts vendor', 'mobile prepared food vendor',
                'navy pier kiosk', 'not available', 'private school', 'restaurant',
                'school', 'shared kitchen', 'shared kitchen user (long term)',
                'shared kitchen user (short term)', 'shelter', 'special event',
                'stadium', 'tavern', 'wholesale']
        },
        {
            'title': 'infant_care',
            'lst': ['school', 'children\'s services facility', 'daycare (2 - 6 years)',
                'daycare above and under 2 years', 'daycare combo 1586', 'charter school', 'daycare (under 2 years)', 'private school', 'daycare', 'daycare (2 years)']
        },
        {
            'title': 'catering',
            'lst': ['restaurant', 'bakery', 'catering', 'golden diner', 'tavern', 'banquet hall', 'grocery/restaurant', 'coffee shop', 'banquet', 'cafeteria']
        },
        {
            'title': 'alcohol',
            'lst': ['tavern', 'liquor']
        },
        {
            'title': 'stores',
            'lst': ['grocery store', 'bakery', 'wholesale', 'gas station', 'grocery/restaurant', 'kiosk', 'live poultry', 'convenience store', 'navy pier kiosk', 'convenience']
        },
        {
            'title': 'special_events',
            'lst': ['catering', 'misc', 'special event',  'banquet hall', 'shared kitchen user (long term)', 'charter school', 'banquet', 'stadium']
        },
        {
            'title': 'adult_care',
            'lst': ['long term care', 'daycare combo 1586', 'hospital', 'shelter']
        },
        {
            'title': 'mobile_vendors',
            'lst': ['mobile food dispenser', 'mobile food preparer', 'mobile prepared food vendor', 'mobile frozen desserts vendor']
        },
        {
            'title': 'shared_facilities',
            'lst': ['shared kitchen user (long term)', 'shared kitchen', 'shared kitchen user (short term)']
        },
        {
            'title': 'uncommon_facilities',
            'lst': ['not available', 'misc', 'shelter', 'shared kitchen', 'live poultry', 'navy pier kiosk', 'stadium', 'shared kitchen user (long term)', 'shared kitchen user (short term)']
        }
    ]
    all_types = ['bakery', 'banquet', 'banquet hall', 'cafeteria', 'catering',
        'charter school', &quot;children's services facility&quot;, 'coffee shop',
        'convenience', 'convenience store', 'daycare',
        'daycare (2 - 6 years)', 'daycare (2 years)',
        'daycare (under 2 years)', 'daycare above and under 2 years',
        'daycare combo 1586', 'gas station', 'golden diner',
        'grocery store', 'grocery/restaurant', 'hospital', 'kiosk',
        'liquor', 'live poultry', 'long term care', 'misc',
        'mobile food dispenser', 'mobile food preparer',
        'mobile frozen desserts vendor', 'mobile prepared food vendor',
        'navy pier kiosk', 'not available', 'private school', 'restaurant',
        'school', 'shared kitchen', 'shared kitchen user (long term)',
        'shared kitchen user (short term)', 'shelter', 'special event',
        'stadium', 'tavern', 'wholesale']
    var pf_ratios = {
        'per_type': {
            'shared kitchen user (short term)': [0.0, 0.0, 0.0, 0.0, 0.0, 97.3, 2.7],
            'shared kitchen user (long term)': [0.0, 2.8, 0.6, 0.0, 0.0, 91.7, 5.0],
            'navy pier kiosk': [0.0, 13.6, 0.0, 1.5, 4.5, 75.8, 4.5],
            'daycare (2 years)': [0.0, 15.1, 1.9, 0.0, 7.5, 71.7, 3.8],
            'kiosk': [0.0, 21.5, 0.0, 0.9, 0.0, 71.0, 6.5],
            'school': [0.0, 19.6, 0.3, 0.0, 2.7, 69.1, 8.2],
            'shelter': [0.0, 20.5, 1.9, 0.0, 2.5, 67.7, 7.5],
            'hospital': [0.2, 14.5, 0.2, 0.5, 4.2, 65.7, 14.7],
            'private school': [0.0, 15.7, 0.0, 1.9, 8.3, 64.8, 9.3],
            'daycare above and under 2 years': [0.1, 17.7, 1.5, 0.2, 4.5, 64.6, 11.5],
            'daycare (under 2 years)': [0.0, 21.3, 1.2, 0.0, 8.8, 63.9, 4.8],
            'cafeteria': [0.0, 11.9, 0.0, 0.0, 8.3, 63.1, 16.7],
            'special event': [0.0, 16.2, 2.3, 2.3, 5.6, 63.0, 10.6],
            'golden diner': [0.0, 19.5, 1.4, 0.2, 4.8, 62.3, 11.9],
            &quot;children's services facility&quot;: [0.0, 17.7, 1.8, 0.6, 3.1, 61.8, 15.1],
            'daycare (2 - 6 years)': [0.0, 19.3, 2.5, 0.4, 8.8, 61.6, 7.3],
            'convenience': [0.0, 20.0, 1.5, 0.0, 13.8, 60.0, 4.6],
            'shared kitchen': [0.0, 20.8, 4.9, 2.8, 4.2, 59.7, 7.6],
            'daycare': [0.0, 14.6, 0.0, 0.0, 12.2, 58.5, 14.6],
            'mobile food dispenser': [0.1, 29.8, 1.1, 1.2, 5.2, 58.1, 4.5],
            'wholesale': [0.0, 33.8, 0.9, 0.2, 5.9, 57.2, 2.0],
            'daycare combo 1586': [0.0, 22.3, 1.7, 0.0, 11.7, 56.2, 8.2],
            'banquet': [0.0, 16.3, 13.0, 0.8, 2.4, 56.1, 11.4],
            'long term care': [0.0, 22.1, 0.3, 0.6, 4.0, 56.0, 17.1],
            'coffee shop': [0.8, 19.4, 0.0, 1.6, 9.3, 55.8, 13.2],
            'convenience store': [0.0, 22.9, 0.0, 3.6, 8.4, 55.4, 9.6],
            'charter school': [0.0, 17.9, 6.0, 3.6, 8.3, 54.8, 9.5],
            'bakery': [0.0, 21.4, 3.0, 1.2, 8.1, 54.7, 11.6],
            'restaurant': [0.0, 18.7, 3.9, 0.9, 6.9, 54.0, 15.6],
            'catering': [0.0, 16.0, 7.5, 0.7, 8.8, 53.8, 13.2],
            'mobile prepared food vendor': [0.0, 21.0, 0.8, 19.4, 0.0, 53.2, 5.6],
            'grocery store': [0.0, 23.7, 1.6, 1.1, 8.9, 53.0, 11.7],
            'grocery/restaurant': [0.0, 18.1, 1.4, 0.7, 8.3, 52.1, 19.4],
            'misc': [0.0, 20.1, 3.0, 3.3, 8.1, 51.3, 14.2],
            'live poultry': [0.0, 28.7, 0.0, 0.0, 5.7, 50.6, 14.9],
            'liquor': [0.0, 35.4, 2.9, 2.9, 4.9, 49.4, 4.5],
            'mobile food preparer': [0.2, 28.8, 1.5, 7.4, 2.9, 48.9, 10.3],
            'gas station': [0.0, 27.7, 0.5, 2.3, 10.8, 47.4, 11.3],
            'tavern': [0.0, 32.3, 8.0, 2.4, 4.5, 45.4, 7.4],
            'mobile frozen desserts vendor': [0.0, 8.5, 2.8, 10.4, 1.9, 40.6, 35.8],
            'banquet hall': [0.0, 23.0, 20.9, 0.5, 7.0, 39.0, 9.6],
            'stadium': [0.0, 26.7, 2.2, 2.2, 0.0, 37.8, 31.1],
            'not available': [0.5, 7.7, 1.5, 2.0, 82.0, 5.4, 0.8]
        },
        'all': {
            'all': [0.044186, 19.641860, 2.476744, 1.867442, 7.623256, 57.662791, 10.683721]
        },
        'per_category': {
            'adult_care': [0.0, 0.2055084745762712, 0.007062146892655367, 0.0035310734463276836, 0.059322033898305086, 0.5858050847457628, 0.13665254237288135],
            'alcohol': [0, 0.3273657289002558, 0.01619778346121057, 0.0, 0.021312872975277068, 0.4680306905370844, 0.026427962489343565],
            'catering': [0.0, 0.18709406618654179, 0.039507209237249444, 0.009072298561098101, 0.06871971604883724, 0.5401773221991487, 0.15436898923400932],
            'infant_care': [0.0, 0.19091537929444316, 0.010145261701637076, 0.0017984782107447544, 0.04168780262854508, 0.659534240258243, 0.09398201521789255],
            'mobile_vendors': [0.0, 0.273224043715847, 0.012143290831815421, 0.052823315118397086, 0.03642987249544627, 0.5324833029751063, 0.08561020036429873],
            'shared_facilities': [0, 0.08659217877094973, 0.0111731843575419, 0.0, 0.00558659217877095, 0.7932960893854749, 0.04748603351955307],
            'special_events': [0, 0.1582891039650328, 0.04308460817983141, 0.0, 0.05650952232282235, 0.5388698095535436, 0.111145800811739],
            'stores': [0.0, 0.23631261976457707, 0.016630166986038874, 0.010881467287161238, 0.08674377224199288, 0.5329865863673693, 0.11500821242814126],
            'uncommon_facilities': [0.0, 0.1038135593220339, 0.013922518159806295, 0.017100484261501212, 0.6060835351089588, 0.20021186440677965, 0.036168280871670705]
        }
    }
    for (i in facility_types) {
        $('#chartoptions li#catgs ul').append(
            `&lt;li class=&quot;dropdown-item&quot;&gt;&lt;a tabindex=&quot;-1&quot; href=&quot;#&quot;&gt;`+facility_types[i]['title']+`&lt;/a&gt;&lt;/li&gt;`);
    }
    $('#chartoptions li#types ul').append(
        `&lt;li class=&quot;dropdown-item&quot;&gt;&lt;a tabindex=&quot;-1&quot; href=&quot;#&quot;&gt;All types&lt;/a&gt;&lt;/li&gt;`);
    for (i in all_types) {
        $('#chartoptions li#types ul').append(
            `&lt;li class=&quot;dropdown-item&quot;&gt;&lt;a tabindex=&quot;-1&quot; href=&quot;#&quot;&gt;`+all_types[i]+`&lt;/a&gt;&lt;/li&gt;`);
    }
    $('#types-dropdown li a').click(function(e) {
        // update breadcrumbs
        console.log('a')
        e.preventDefault();
        var $li_parent = $(e.target).parent().parent().parent()
        var $a_child = $li_parent.children('a.dropdown-toggle')
        type_name = $(e.target).text()
        $a_child.text(type_name)
        // update plot
        catg_name = $('li#catgs a.dropdown-toggle').text()
        ct_pf_ratios = get_catg_type_pf_ratios(type_name, catg_name, facility_types)
        generate_plot({'name': 'All', 'data': pf_ratios['all']['all']}, 
                        {'name': catg_name, 'data': ct_pf_ratios[0]},
                        {'name': type_name, 'data': ct_pf_ratios[1]})
    });
    $('#catgs-dropdown li a').click(function(e) {
        // update breadcrumbs
        e.preventDefault();
        var $li_parent = $(e.target).parent().parent().parent()
        var $a_child = $li_parent.children('a.dropdown-toggle')
        catg_name = $(e.target).text()
        $a_child.text(catg_name)
        // update types 
        for (i in facility_types) {
            if (catg_name == facility_types[i]['title']) {
                $('#chartoptions li#types ul').html(`&lt;li class=&quot;dropdown-item&quot;&gt;&lt;a tabindex=&quot;-1&quot; href=&quot;#&quot;&gt;All types&lt;/a&gt;&lt;/li&gt;`);
                for (j in facility_types[i]['lst']) {
                    $('#chartoptions li#types ul').append(
                        `&lt;li class=&quot;dropdown-item&quot;&gt;&lt;a tabindex=&quot;-1&quot; href=&quot;#&quot;&gt;` +
                        facility_types[i]['lst'][j] + `&lt;/a&gt;&lt;/li&gt;`);
                }
                // update types dropdown and re-add event listeners
                $('li#types a.dropdown-toggle').text('All types')
                $('#types-dropdown li a').click(function(e) {
                    e.preventDefault();
                    var $li_parent = $(e.target).parent().parent().parent();
                    var $a_child = $li_parent.children('a.dropdown-toggle');
                    type_name = $(e.target).text(); $a_child.text(type_name);
                    catg_name = $('li#catgs a.dropdown-toggle').text();
                    ct_pf_ratios = get_catg_type_pf_ratios(type_name, catg_name, facility_types);
                    generate_plot({'name': 'All', 'data': pf_ratios['all']['all']}, {'name': catg_name, 'data': ct_pf_ratios[0]}, {'name': type_name, 'data': ct_pf_ratios[1]});
                });
                break;
            }
        } 
        // update plot
        catg_array = get_catg_pf_ratios(catg_name, facility_types)
        generate_plot({'name': 'All', 'data': pf_ratios['all']['all']}, 
                        {'name': catg_name, 'data': catg_array},
                        {'name': 'All types', 'data':  catg_array})
    });
    generate_plot({'name': 'All', 'data': pf_ratios['all']['all']}, 
                  {'name': 'All categories', 'data': pf_ratios['all']['all']},
                  {'name': 'All types', 'data': pf_ratios['all']['all']})
&lt;/script&gt;</content><author><name>Alfonso Amayuelas, Beatriz Borges, Jade Cock, Mahmoud Said</name></author><summary type="html">What is the impact of the business type?</summary></entry></feed>